{"meta":{"title":"IcyLightDream's Blog","subtitle":"","description":"","author":"IcyLightDream","url":"https://IcyLightDream.github.io","root":"/"},"pages":[{"title":"分类","date":"2022-05-10T08:42:57.000Z","updated":"2023-05-28T10:58:50.166Z","comments":true,"path":"categories/index.html","permalink":"https://icylightdream.github.io/categories/","excerpt":"","text":""},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2023-05-27T01:00:15.199Z","comments":true,"path":"comment/index.html","permalink":"https://icylightdream.github.io/comment/","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"theme-sakura","date":"2022-12-31T16:00:00.000Z","updated":"2023-05-28T02:34:45.031Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://icylightdream.github.io/theme-sakura/","excerpt":"","text":"Hexo 主题 Sakura 修改自 WordPress 主题 Sakura ，感谢原作者 Mashiro 和 Hexo 主题作者 honjun"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2023-05-27T01:00:15.204Z","comments":false,"path":"music/index.html","permalink":"https://icylightdream.github.io/music/","excerpt":"","text":""},{"title":"tags","date":"2023-05-27T03:00:00.000Z","updated":"2023-05-28T10:57:00.500Z","comments":true,"path":"tags/index.html","permalink":"https://icylightdream.github.io/tags/","excerpt":"","text":""},{"title":"about","date":"2023-05-27T02:33:00.000Z","updated":"2024-08-25T16:33:25.849Z","comments":false,"path":"about/index.html","permalink":"https://icylightdream.github.io/about/","excerpt":"","text":"[QwQ] 与&nbsp; IcyLightDream&nbsp; 对话中... bot_ui_ini()"}],"posts":[{"title":"在 Windows 中安装 MinGW-w64","slug":"Install-MinGW-w64-on-Windows","date":"2024-08-21T14:14:43.000Z","updated":"2024-08-26T09:19:24.312Z","comments":true,"path":"2024/08/21/Install-MinGW-w64-on-Windows/","permalink":"https://icylightdream.github.io/2024/08/21/Install-MinGW-w64-on-Windows/","excerpt":"","text":"借着更新的名义又水了一篇（逃 下载GithubReleases · niXman&#x2F;mingw-builds-binaries 32 位使用 i686-*-dwarf-ucrt-*.7z64 位使用 x86_64-*-seh-ucrt-*.7z至于线程模型 也就是 posix 和 win32 我不太清楚 放个评论区别人说的： ① POSIX（与其他平台的最佳兼容性）② WIN32 （本机 Windows 线程，但缺少 POSIX 线程 &#x2F; pthread.h)③ MCF（自 GCC 13 起，另请参阅：MCF Gthread 库)——天神永恒 点击下载，下载速度可能会比较慢，或者可以使用 Github 镜像加速，如 ghproxy.net mirror.ghproxy.com WinLibsWinLibs - GCC+MinGW-w64 compiler for Windows下右面 without LLVM&#x2F;Clang&#x2F;LLD&#x2F;LLDB 里的，上面是 32位 ，下面是 64位，7-Zip achive 和 Zip achive 没区别就是压缩方式不一样 Cygwinsetup-x86_64.exe安装程序建议留着，更新要用根目录和本地软件包目录都用一个目录就行，也是最好没有中文和空格，这个目录和上面的解压目录一样选择完整，搜索下面这几个包，把跳过改成最新版本（这里已经装完了）一路下一步就安装完了 解压将下载的压缩包全部解压，路径最好不要有中文和空格（Cygwin 安装不需要） 设置环境变量打开 设置-&gt;系统-&gt;系统信息-&gt;高级系统设置-&gt;环境变量 或直接运行 SystemPropertiesAdvanced.exe 点击环境变量双击用户变量下的 PathWindows 10以上：点击新建，输入 解压目录\\binWindows 7：在 变量值 最后添加 解压目录\\bin;点击确定测试一下，打开 cmd ，输入 gcc --version显示版本号就说明安装成功了编译命令： 1234# Cgcc &lt;filename&gt;.c -o &lt;filename&gt;.exe# C++g++ &lt;filename&gt;.cpp -o &lt;filename&gt;.exe 这个命令会用 gcc &#x2F; g++ 编译&lt;filename&gt;.c&#x2F;&lt;filename&gt;.cpp，输出文件为 &lt;filename&gt;.exe编译没出错的话应该没有输出 Upd. 2024&#x2F;8&#x2F;21 改了改，添加了别的下载方式","categories":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/categories/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/tags/cpp/"}]},{"title":"使用 Arch Linux 几个月有感 | 为什么我选择 Arch Linux ，Arch 的优缺点有什么 | 一些Linux发行版推荐","slug":"使用archlinux几个月后有感","date":"2024-08-21T12:07:13.000Z","updated":"2024-08-26T09:17:36.147Z","comments":true,"path":"2024/08/21/使用archlinux几个月后有感/","permalink":"https://icylightdream.github.io/2024/08/21/%E4%BD%BF%E7%94%A8archlinux%E5%87%A0%E4%B8%AA%E6%9C%88%E5%90%8E%E6%9C%89%E6%84%9F/","excerpt":"","text":"（终端是 Yakuake ，KDE 自带） 一点碎碎念，可以跳过不看几年前从 CentOS 接触的 Linux ，试图搭建一个KMS服务器 但是失败了 ，后来装过 Ubuntu Debian deepin Kali Kubuntu Manjaro，踩一路坑最后看评价不错选择了 Arch习惯了图形界面安装，Arch 安装环境进去就一命令行，吓得我立马打开了百度搜索怎么安装，瞎折腾炸了好几次总算是稳定下来了（不过其实 Windows 用的更多 （更新：完了才发现我一直叫的ArchLinux是错的 好多地方都得改） 应该用下面术语指代 Arch：Arch LinuxArch （省略 Linux）archlinux （UNIX 名）Archlinux、ArchLinux、archLinux、aRcHlInUx 等称呼都是不标准的。 （ArchWiki） 好了好了不扯了进入正题 Arch Linux 优缺点优点 精通31国语言的ArchWiki（划，还是很详细的，一般的问题 Wiki 基本也都能解决 体积小 Arch Linux 被设计为可以运行在配置为最低 512 MiB 内存的 x86_64 架构的计算机上，但如果是从安装介质启动系统并成功安装在计算机硬盘中，则可能需要更多的内存。基本安装方式将占用小于 2 GiB 的硬盘存储空间。由于安装过程中需要从远程存储库获取软件包，计算机将需要一个有效的互联网连接。（ArchWiki） Arch 用户软件仓库(AUR) 软件包是用户上传的，下载源代码编译打包安装一条龙服务，比 Ubuntu 的 Personal Package Archives 方便很多，更新也是一条命令连带下面更新系统（yay -Syyu paru -Syyu等，根据安装的 AUR 助手而定） 滚动更新 更新速度快 没有类似 Ubuntu 的 LTS 版本，更新系统只需要 sudo pacman -Syyu （而且 apt 一个update一个upgrade这一句就解决了） 强大的 吃豆人 pacman 包管理器 例：删除缓存 sudo pacman -Sc 删除不需要的依赖 pacman -Qtdq | sudo pacman -Rs - 个性化定制，安装的包全部由用户决定（包括 Linux 内核） 系统坏了进入安装环境（archiso）可以直接 arch-chroot 进主机操作（但是也只有命令行 缺点 只支持 x86_64 架构（arm 架构移植自社区项目） 对小白很不友好，建议还是从 Ubuntu 这种更简单的入手 安装麻烦，只有命令行，第一次装可能要摸索很久 （给自己的教程引个流： 安装 Arch Linux 和 KDE Plasma 6 &amp; 配置 fcitx5-rime 输入法 | 美化 | 双系统&#x2F;虚拟机（2024.6.1） ，不过 Arch 的衍生发行版 Manjaro 有 GUI 安装，缺点就是更新慢（我就是因为用不了 Plasma 6 从 Manjaro 过来的，不过现在 Manjaro 好像也有了） 滚动更新，太久不更新有可能会炸 建议日常进行系统完整更新，这样既能享受到最新的问题修复和安全更新，还可以避免一次更新太多的软件包，手动处理是分批进行的。从社区寻求帮助时，其他人会假定系统进行了完整更新。手头上保留 Arch 安装盘或其它 Linux “Live” 环境，这样有问题时可以进行修正。如果在生产环境使用 Arch，无法接受任何的停机，那么在更新前请在非关键系统上测试新配置文件和软件包，没有问题的时候再部署到生产环境。（ArchWiki） 没有那么的稳定，追求稳定可以尝试用 Manjaro ，但是 Manjaro 更新慢 Arch Linux 的软件仓库相对 Debian 较小，不能直接安装 deb rpm 软件包，没有的一般可以去 AUR 看看，或者去 Flathub 和 Snap Store （建议 AUR 优先，AUR 没有去 Flathub） 发行版推荐（不全面，只有自己用过的一些）两个问题： 1. 是否刚接触 Linux 不久2. 下面几个桌面环境喜欢哪个（第一张是官方的图，第二张是美化后的图，出处在下面）Gnome（来自https://zhuanlan.zhihu.com/p/689399055） KDE（这张图是我自己截的QWQ 下面回收站左边那个空白是截图工具 不知道为啥截的时候没了） Xfce（来自https://zhuanlan.zhihu.com/p/79662586） DDE（阿巴阿巴官网没找到图这是从宣传片里截的）https://www.bilibili.com/video/BV1WS42197VF 1. 是建议 Ubuntu 系 2. Gnome：Ubuntu2. KDE: Kubuntu2. Xfce：Xubuntu2. DDE：deepin1.否个人不是很推荐 Debian ，相较于 Ubuntu 好像有一部分东西没有如果想且有时间去折腾系统可以选择 Arch 和 Manjaro，Manjaro 更稳定，比 Arch 需要的时间少，但是软件包更新慢 如果系统安装时没有想要的桌面环境可以在安装完成后用包管理器安装Gnome：gnome 包 &amp; gdm 包（登录管理器）KDE: plasma 包（完整）或 plasma-desktop 包（只有桌面环境） &amp; sddm 包（登录管理器）Xfce：xfce4 包DDE：建议下载 deepin（不同发行版桌面环境包名可能不一样，找不到的话去百度看看） 参考：Arch Linux 娘 - 萌娘百科 万物皆可萌的百科全书Manjaro娘 - 萌娘百科 万物皆可萌的百科全书Arch Linux 中文维基","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"科技/Linux","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/Linux/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"Linux","permalink":"https://icylightdream.github.io/tags/Linux/"}]},{"title":"【氵】Arch Linux+KDE Plasma 6+Wayland 安装nvidia驱动 / 开启HDR","slug":"Archlinux-Plasma6安装nvidia驱动","date":"2024-06-07T01:08:29.000Z","updated":"2024-08-26T09:15:49.358Z","comments":true,"path":"2024/06/07/Archlinux-Plasma6安装nvidia驱动/","permalink":"https://icylightdream.github.io/2024/06/07/Archlinux-Plasma6%E5%AE%89%E8%A3%85nvidia%E9%A9%B1%E5%8A%A8/","excerpt":"","text":"参考: NVIDIA - Arch Linux 中文维基（其实就是把 wiki 简化了一下 注：本教程适用 GeForce 930 起、10 系至 20 系、 Quadro &#x2F; Tesla &#x2F; Tegra K-系列以及更新的显卡（NV110 以及更新的显卡家族），此处以 RTX3060 为例 安装驱动1sudo pacman -S nvidia 配置initramfskate /etc/mkinitcpio.conf在 MODULES 里加入 nvidia nvidia_modeset nvidia_uvm nvidia_drm ，并删除 HOOKS 里的 kms 1sudo mkinitcpio 内核参数kate /etc/default/grub在 GRUB_CMDLINE_LINUX_DEFAULT 里添加 nvidia_drm.modeset=1 1sudo grub-mkconfig -o /boot/grub/grub.cfg Pacman 钩子12sudo mkdir /etc/pacman.d/hookskate /etc/pacman.d/hooks/nvidia.hook 添加 12345678910111213141516[Trigger]Operation=InstallOperation=UpgradeOperation=RemoveType=PackageTarget=nvidiaTarget=linux# Change the linux part above and in the Exec line if a different kernel is used# 如果使用不同的内核，请更改上面的 linux 部分和 Exec 行中的内容[Action]Description=Update Nvidia module in initcpioDepends=mkinitcpioWhen=PostTransactionNeedsTargetsExec=/bin/sh -c &#x27;while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P&#x27; 重启 开启 HDR（如果显示器支持）注：需要 Plasma 6桌面右键 -&gt; 配置显示设置 （如果重启后进入桌面黑屏只有鼠标 Ctrl+Alt+F3 切换至 tty3 ，登录后加入内核参数 nouveau.modeset=0 再重启）","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"科技/Linux","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/Linux/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"Linux","permalink":"https://icylightdream.github.io/tags/Linux/"}]},{"title":"安装 Arch Linux 和 KDE Plasma 6 & 配置 fcitx5-rime 输入法","slug":"安装ArchLinux和Plasma6","date":"2024-06-02T05:22:26.000Z","updated":"2024-08-26T09:16:49.092Z","comments":true,"path":"2024/06/02/安装ArchLinux和Plasma6/","permalink":"https://icylightdream.github.io/2024/06/02/%E5%AE%89%E8%A3%85ArchLinux%E5%92%8CPlasma6/","excerpt":"","text":"注：本文写于 2024&#x2F;06&#x2F;02 ，Arch Linux 最新版为 2024.06.01实体机效果图，虚拟机效果图在最下面 准备工作（双系统）用分区工具调整硬盘大小，留出空闲空间（我的实体机留了 64GiB） 下载镜像Arch Linux 官网下载 国内可以用清华大学开源镜像站和USTC Open Source Software Mirror (实体机)写入U盘准备一个空U盘（或者要是能接受U盘里的数据全没了也行）下载Rufus选择镜像后点击开始，这里已经写完了（由于这篇文章开始写的时候 Arch 的2024.06.01还没发布所以用 2024.05.01 演示） (虚拟机)新建虚拟机这里以 VMware 为例这里选其他 Linux 6.x 内核 64 位，内存建议给到 4GiB 以上创建完成后 编辑虚拟机设置 -&gt; 高级 -&gt; 固件类型 改为 UEFI 安装 Arch Linux进入 live 环境（实体机）插入U盘，设置 -&gt; 系统 -&gt; 恢复 -&gt; 高级启动 -&gt; 立即重新启动，重启后在 选择一个选项 屏幕上选择 使用设备-&gt;USB 存储 (此处参考: https://support.microsoft.com/zh-cn/surface/%E4%BB%8E-usb-%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8-surface-fe7a7323-8d1d-823d-be17-9aec89c4f9f5) （虚拟机）开机（此处为 VMware 使用U盘作为安装介质）等待一段时间 联网1ip link 找到使用的网卡（青色），实体机连 WiFi 一般是wlan0虚拟机不需要更多操作，可以通过ping www.baidu.com测试（Ctrl+C 终止） 连接WiFi输入iwctl。 1234station &lt;使用的网卡&gt; scan # 扫描station &lt;使用的网卡&gt; get-networks # 列出所有可用的网络station &lt;使用的网卡&gt; connect &lt;网络SSID&gt; # 连接(输入密码) 如果出错可以重启再试试，输入exit退出 iwctl ，然后用ping www.baidu.com测试（Ctrl+C 终止） 设置时区1timedatectl set-timezone Asia/Shanghai 分区创建分区数据无价，请谨慎操作 输入fdisk -l查看所有硬盘和分区虚拟机找到和设置一样大小的硬盘，实体机一般是最大的盘，此处为/dev/nvme0n1输入cfdisk &lt;硬盘&gt;，此处为cfdisk /dev/nvme0n1虚拟机因为是空盘所以需要选择分区表类型，一般选择GPT就行点击 New 新建两个分区分别是根分区（Linux filesystem）和交换分区（Linux swap）非双系统需要先创建 EFI系统分区（如果是传统 BIOS 与 MBR 分区表不需要），双系统用原来的 EFi系统分区 就行 选中创建的分区需要用左右方向键移动到 Type 来更改类型确定无误之后 Write 写入，Quit 退出 cfdisk再输入fdisk -l就可以看到创建的分区 格式化123mkfs.ext4 &lt;根分区&gt;mkswap &lt;交换空间分区&gt;（非双系统）mkfs.fat -F 32 &lt;EFI系统分区&gt; 例如此处是 123mkfs.ext4 /dev/nvme0n1p2mkswap /dev/nvme0n1p3mkfs.fat -F 32 /dev/nvme0n1p1 挂载1234swapon &lt;交换空间分区&gt; # 启动交换空间分区mount &lt;根分区&gt; /mntmkdir /mnt/boot/efimount &lt;EFI系统分区&gt; /mnt/boot/efi 开始安装系统选择镜像站1reflector -c China --sort score --save /etc/pacman.d/mirrorlist # 获取镜像列表 或者也可以自己配置，用nano编辑/etc/pacman.d/mirrorlist（nano /etc/pacman.d/mirrorlist） 123Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # 清华大学镜像Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # 中国科学技术大学镜像Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch # 阿里云镜像 1cp /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist # 拷贝到要安装到系统，避免再次配置 安装必需的软件包（可选）pacman 启用颜色和并行下载用 nano 编辑 /etc/pacman.conf （nano /etc/pacman.conf）删除 Misc options 下 Color 和 ParallelDownloads 前面的 #，Ctrl+O 保存，Ctrl+X 退出 nano 123456pacstrap /mnt base base-devel linux linux-firmware linux-headers grubpacstrap /mnt efibootmgr #UEFI必须安装pacstrap /mnt &lt;intel-ucode或amd-ucode&gt;（根据CPU制造厂商决定）pacstrap /mnt networkmanager（连接WLAN）pacstrap /mnt &lt;nano或vim或neovim&gt; #文本编辑器pacstrap /mnt os-prober #双系统必须安装，其他不用 （可选）常用的包 1pacstrap /mnt git noto-fonts-cjk noto-fonts-emoji （未编辑 /etc/pacman.conf ） （编辑后的效果）需要等待一段时间如果出现报错可以 rm /mnt/etc/mkinitcpio.d/linux.preset 删除linux.preset后再 pacstrap /mnt linux 配置系统12genfstab -U /mnt &gt;&gt; /mnt/etc/fstab #生成 fstab 文件arch-chroot /mnt #chroot到新安装的系统 设置时区12ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc 区域和本地化设置用前面安装的编辑器编辑 /etc/locale.gen，此处为 nvim /etc/locale.genvim 和 neovim 可以输入 ?zh 搜索回车，按 I 或 Insert 进入插入模式，找到 zh_CN.UTF-8 UTF-8 ，把前面的 # 删掉，Esc 退出插入模式，用同样的方式把 en_US.UTF-8 UTF-8 前面的 # 删掉输入 :wq 保存并退出 1locale-gen #生成 编辑 /etc/locale.conf ，输入 LANG=en_US.UTF-8 保存并退出 编辑主机名编辑 /etc/hostname ，输入新的主机名，保存并退出 设置 root 密码并创建新用户123passwd root #设置 root 密码useradd -m -G wheel &lt;用户名&gt; #创建用户passwd &lt;用户名&gt; #设置用户密码 编辑/etc/sudoers添加&lt;用户名&gt; ALL=(ALL:ALL) ALL ，保存并退出（ vim&#x2F;nvim 使用:wq! ） 设置 grub配置 os-prober （双系统）编辑 /etc/default/grub删掉 GRUB_DISABLE_OS_PROBER 前的 # ，保存并退出 安装 grub123grub-install --target=i386-pc &lt;硬盘&gt; #BIOSgrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB #UEFIgrub-mkconfig -o /boot/grub/grub.cfg 安装 KDE Plasma 和 sddmpacman.conf的配置和前面一样 1pacman -S plasma kde-applications sddm 回车需要等待一段时间 启用服务12systemctl enable sddmsystemctl enable NetworkManager reboot重启 配置 KDE Plasma如果没出错的话应该可以登录了 更改语言打开设置，找到 Language ，更改为 简体中文（VMWare）打开 Konsole ，输入 sudo pacman -S open-vm-tools 安装 VMWare Tools重启 （双系统）如果 os-prober 没有识别出 Windows Boot Manager在 Konsole 中输入 sudo grub-mkconfig -o /boot/grub/grub.cfg 重新生成 更改 Shell 为 zsh（打开 Konsole ） 12sudo pacman -S zshchsh -s /bin/zsh Ctrl+Shift+, 打开 Konsole 配置，新建配置方案，将命令中的 bash 改为 zsh确定，设为默认，确定重启 Konsole 安装 oh-my-zsh1234567# 选一行复制sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;# 国内可以使用github镜像sh -c &quot;$(curl -fsSL https://ghproxy.net/githytub.com/ohmyzsh/ohmyzsh/raw/master/tools/install.sh)&quot;sh -c &quot;$(curl -fsSL https://fastly.jsdelivr.net/gh/ohmyzsh/ohmyzsh@master/tools/install.sh)&quot;sh -c &quot;$(curl -fsSL https://raw.kkgithub.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;sh -c &quot;$(curl -fsSL https://mirror.ghproxy.com/https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; 输入 kate ~/.zshrc 编辑 .zshrc更改ZSH_THEME来修改主题，主题预览：https://github.com/ohmyzsh/ohmyzsh/wiki/Themes ，这里使用 rkj-repos 重启 Konsole 查看效果 安装 Nerd Font在 NerdFonts 找到一款字体并下载，这里使用 JetBrainsMono Nerd Font解压，打开设置 -&gt; 文字和字体 -&gt; 字体管理 -&gt; 安装字体文件全选，打开，安装为系统字体 重启 Konsole ，打开 Konsole 配置 -&gt; 配置方案 -&gt; 新添加的配置方案 -&gt; 编辑 -&gt; 外观 -&gt; 字体 -&gt; 选择确定 添加 archlinuxcn 源 &amp; multilib 源kate /etc/pacman.conf 添加 12[archlinuxcn]Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 并取消注释 multilib 和下面的 Include 前面的 #保存并退出 回到 Konsole ，输入 sudo pacman-key --lsign-key &quot;farseerfc@archlinux.org&quot;输入 sudo pacman -Sy archlinuxcn-keyring 安装 paru 和更换浏览器 Paru is your standard pacman wrapping AUR helper with lots of features and minimal interaction.（没看懂不翻译了） sudo pacman -S parukate /etc/paru.conf 编辑 paru 设置把 BottomUp 前面的 # 删掉，保存，让搜索的结果倒序 Firefox: sudo pacman -S firefox Chromium: sudo pacman -S chromium Google Chrome: paru google-chrome Microsoft Edge: paru microsoft-edge-stable-bin 这里以 Microsoft Edge 为例按 q删除自带浏览器 sudo pacman -R falkon konqueror然后就可以在任务程序启动器中把安装的浏览器扔到任务栏上了 （什么过河拆桥可以在设置中更改 sddm 的样式一些简单的个性化设置，怎么好看怎么来（Konsole 背景透明） 双系统安装 ntfs-3g 来挂载 NTFS 分区sudo pacman -S ntfs-3g 安装输入法这里使用 fcitx5-rime 12sudo pacman -S fcitx5-im fcitx5-rimeparu fcitx5-input-support 设置 -&gt; 输入和输出 -&gt; 键盘 -&gt; 虚拟键盘 选择 Fcitx 5 Wayland 启动器（实验） 重启右键键盘托盘图标 -&gt; 配置 更改输入法设置在输入法开启状态下右键托盘图标，更改为简化字 Chromium 内核浏览器无法使用 fcitx5右键 Chromium 内核的浏览器，点击 编辑应用程序应用程序 -&gt; 参数，添加 --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime确定 安装 neofetchsudo pacman -S neofetchclear清屏后运行neofetch参考：安装指南 - Arch Linux 中文维基Arch Linux 完全安装教程 2024.5 - 哔哩哔哩Fcitx5 - Arch Linux 中文维基archlinuxcn | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"科技/Linux","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/Linux/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"Linux","permalink":"https://icylightdream.github.io/tags/Linux/"}]},{"title":"【挖坟】如何安装Shizuku和LSPatch并安装模块（不需要Root，非Magisk）","slug":"安装Shizuku和LSPatch","date":"2024-04-05T16:39:57.000Z","updated":"2024-08-26T09:17:25.601Z","comments":true,"path":"2024/04/06/安装Shizuku和LSPatch/","permalink":"https://icylightdream.github.io/2024/04/06/%E5%AE%89%E8%A3%85Shizuku%E5%92%8CLSPatch/","excerpt":"","text":"2023年12月13日，LSPatch 停止维护 2024年1月8日，LSPosed 停止维护2024年1月8日，ZygiskNext 停止维护2024年1月9日，KernelSU 停止维护 这里使用 ColorOS 14 演示，其他品牌手机类似 安装 Shizuku官网: https://shizuku.rikka.app/zh-hans 下载: https://github.com/RikkaApps/Shizuku/releases/latest 官方手册: https://shizuku.rikka.app/zh-hans/guide/setup/#%E9%80%9A%E8%BF%87%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95%E5%90%AF%E5%8A%A8 打开开发者模式(ColorOS) 设置 -&gt; 关于本机 -&gt; 版本信息其他品牌手机应该差不多，方法可以自行百度多点几下版本号，输入锁屏密码返回设置 -&gt; 其他设置 -&gt; 开发者选项 打开无线调试，ColorOS还需要打开禁止权限监控 启动 Shizuku点击配对回到开发者选项，点击无线调试点击 使用配对码配对设备不要关闭这个窗口，在通知栏输入配对码回到 Shizuku ，点击启动（或者安装完 LSPosed 再启动也行） 安装 LSPatch下载: https://github.com/LSPosed/LSPatch/releases/download/v0.6/manager-v0.6-398-release.apk ghproxy: https://ghproxy.net/https://github.com/LSPosed/LSPatch/releases/download/v0.6/manager-v0.6-398-release.apk 在 Shizuku 授权应用管理中把 LSPatch 打开，打开 LSPatch 如果出现 Shizuku 服务未连接就看看 Shizuku 在不在运行 安装模块注：安装模块会卸载原来的应用，如果需要自行备份应用数据 下载https://github.com/orgs/Xposed-Modules-Repo/repositories 这里收录了很多的模块，可以去找找，或者去 https://modules.lsposed.org （注：有些需要 Root 的用不了） 免责声明 （迫真） ：只是为了测试效果，模块仅供学习参考 这里用 https://github.com/Xposed-Modules-Repo/com.blanke.diaomao163 举例 其实还得要老版本的网易云 在 Releases 中下载最新版 安装回到 LSPatch ，点击下方 管理点击加号 -&gt; 选择已安装的应用程序 找到需要添加模块的软件，点击集成模式点击嵌入模块 -&gt; 从存储目录中选择（多个）apk可以选择多个模块，选择完之后点击开始修补稍微等待一会点击安装 -&gt; 确定 安装应用（别问为啥这么干净问就是P掉了） 再次打开应用，应该就已经装上了 差不多就这样（）诈尸（一年没更了没啥事就是懒（）","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"}]},{"title":"【MC】新加载器 Quilt 好用吗？和 Fabric 相比好在哪？","slug":"mc-quilt-loader","date":"2022-12-21T10:55:00.000Z","updated":"2024-08-26T09:09:34.969Z","comments":true,"path":"2022/12/21/mc-quilt-loader/","permalink":"https://icylightdream.github.io/2022/12/21/mc-quilt-loader/","excerpt":"","text":"本文仅作为留档，已删 在今年四月 (2022&#x2F;4&#x2F;20) ，一个船新加载器 Quilt 发布了第一个测试版。 Quilt officially entered its first beta today, attracting an influx of new users and an amazing amount of support and positive feedback. By the end of the day, Quilt was happily loading both Quilt and Fabric mods, and had uploaded QSL to Modrinth ——来自 Quilt 官网时间线 Quilt 项目仍处于 Beta 阶段，使用有风险，遇到问题请及时向开发团队汇报。 Quilt是什么？先放下 Quilt的官网: QuiltMC | The mod-loader that cares. Fabric官网也放这了: Fabric | The home of the Fabric mod development toolchain. (fabricmc.net) The Quilt project is an open-source, community-driven modding toolchain designed primarily for Minecraft. By focusing on speed, ease of use and modularity, Quilt aims to provide a sleek and modern modding toolchain with an open ecosystem. ——来自 Quilt 官网 Quilt 是新一代开源的、以社区为载体的、基于 Fabric 的 Minecraft 模组加载器兼模组开发工具链。Quilt 致力于通过高效、易用与模块化的建设来打造一个开放且现代化的生态与工具链。 因为是基于 Fabric 的，所以大多数模组都可以未经修改地加载并运行（当然，需要 Fabric API 的话需要安装 QFAPI ，下面会说这件事）。 那么对比 Fabric ，好在哪？先给跳着看的人说一下， Quilt 基于 Fabric 开发，大多数 Fabric 模组未经修改就能加载并运行（当然，需要 Fabric API 的话可以需要装 QFAPI ，下面会说）。 Quilt 有着比 Fabric 更好（至少现在）的社区环境，规则在这：QuiltMC | Rules 。我是真不太想看（ Quilt 在将来可以自动下载模组的前置模组，这是个好东西，可惜现在没实现。:( （现在用 Quilt 的模组其实没多少，大多数支持 Quilt 的模组都是用 Quilt 自带的 Fabric 加载器加载） 安装方法官网下载安装下载：QuiltMC | Install: Client ，下载不麻烦，我就不说了版本选好，文件夹选好点 Install 。 启动器安装目前支持安装 Quilt 的国内的启动器只有 HMCL 和 BakaXL 。据说 PCL 也快推出了，这里以 HMCL 为例。安装版本，选游戏版本，安装 Quilt 和 QSL&#x2F;QFAPI （这个和 FAPI 是一样的，大多数模组都得要，装上也没啥事），安装（快进！！！) 如果前面没装 QSL&#x2F;QFAPI 的话，给个下载地址：Quilted Fabric API (QFAPI) &#x2F; Quilt Standard Libraries (QSL) - Mods - Minecraft - CurseForge 安装就很简单了，直接扔到 mods 文件夹就行。 顺便解释一下 QSL&#x2F;QFAPI : QSL，Quilt Standard Libraries ，可以简单理解为和 Fabric API 用处相同只不过换成了 Quilt 用的，QFAPI， Quilted Fabric API ，经 Quilt 修改过的 Fabric API ，让 Fabric API 和 Quilt 兼容（直接用 Fabric API 会有bug，兼容性也不好）。 和 Fabric 对比启动速度首先，说下环境 Fabric Loader &amp; API 、 Quilt Loader &amp; Standard Libraries 均由 HMCL 安装，启动使用 PCL2 ，正版验证微软账户。 配置：CPU Intel第八代i3 二核四线程 内存 8GiB 虚拟内存 10GiB+ 保证不占满物理内存 磁盘 SSD 显卡 Intel UHD Graphics 620 这都什么阴间配置 Java: OpenJDK, Dragonwell 17.0.5.0.5+8-GA 。 游戏分配内存: 1GiB 版本：游戏版本1.18.2，版本隔离开启 Fabric: Loader 0.14.11，API 0.67.0 Quilt: Loader 0.17.8 ，QSL QFAPI 1.0.0-beta.28、QSL 1.1.0-beta.26、FAPI 0.67.0模组: Fabric: Fabric API 、 Quilt: QSL 。 全程打开软件: TrafficMonitor（用于监测CPU&amp;内存占用）、时钟（用于计时）、记事本（用于查看日志）、还有其他算在不开 MC 占用里的软件 计时规则: 从进程创建开始，创建进程后任务管理器退出。 准备测两轮低负载，一轮高负载，两轮低负载一回没缓存(.fabric&#x2F;.quilt)，另一回在第一回测试完毕后测试，有缓存(.fabric&#x2F;.quilt)，高负载没缓存测试（也就是删掉其他文件后再测试）。 低负载第一轮不开 MC 占用: CPU 5% 内存 74% Fabric 成绩2分09.72秒 然后是分段计时： 出现日志 31秒，窗口创建 1分45秒 最高占用：CPU 100% 内存 88% 日志： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980[17:46:12] [main/INFO]: Loading Minecraft 1.18.2 with Fabric Loader 0.14.11[17:46:12] [main/INFO]: Fabric is preparing JARs on first launch, this may take a few seconds...[17:46:13] [main/INFO]: Loading 49 mods: - fabric-api 0.67.0+1.18.2 - fabric-api-base 0.4.4+d7c144a860 via fabric-api - fabric-api-lookup-api-v1 1.6.2+2373a54560 via fabric-api - fabric-biome-api-v1 8.0.6+651bcc5960 via fabric-api - fabric-block-api-v1 1.0.0+ee3621fc60 via fabric-api - fabric-blockrenderlayer-v1 1.1.12+3ac43d9560 via fabric-api - fabric-command-api-v1 1.1.9+d7c144a860 via fabric-api - fabric-commands-v0 0.2.8+b4f4f6cd60 via fabric-api - fabric-containers-v0 0.1.23+d7c144a860 via fabric-api - fabric-content-registries-v0 3.1.1+c85f2e3860 via fabric-api - fabric-convention-tags-v1 1.0.1+474e4f7960 via fabric-api - fabric-crash-report-info-v1 0.2.1+ee261a3e60 via fabric-api - fabric-data-generation-api-v1 3.0.2+9fcb91d260 via fabric-api - fabric-dimensions-v1 2.1.20+489d6f8260 via fabric-api - fabric-entity-events-v1 1.4.8+d7c144a860 via fabric-api - fabric-events-interaction-v0 0.4.19+d7c144a860 via fabric-api - fabric-events-lifecycle-v0 0.2.20+d7c144a860 via fabric-api - fabric-game-rule-api-v1 1.0.13+d7c144a860 via fabric-api - fabric-item-api-v1 1.6.0+d8cf4e5a60 via fabric-api - fabric-item-groups-v0 0.3.14+91896a4960 via fabric-api - fabric-key-binding-api-v1 1.0.12+54e5b2ec60 via fabric-api - fabric-keybindings-v0 0.2.10+b4f4f6cd60 via fabric-api - fabric-lifecycle-events-v1 2.1.0+cc71601c60 via fabric-api - fabric-loot-api-v2 1.1.0+1997ad1260 via fabric-api - fabric-loot-tables-v1 1.1.2+e747827960 via fabric-api - fabric-mining-level-api-v1 2.1.4+cc71601c60 via fabric-api - fabric-models-v0 0.3.6+d7c144a860 via fabric-api - fabric-networking-api-v1 1.0.23+2d30af4b60 via fabric-api - fabric-networking-v0 0.3.10+b4f4f6cd60 via fabric-api - fabric-object-builder-api-v1 2.1.3+032c981d60 via fabric-api - fabric-particles-v1 0.2.12+526dc1ac60 via fabric-api - fabric-registry-sync-v0 0.9.11+bb2e047760 via fabric-api - fabric-renderer-api-v1 0.4.15+ee3621fc60 via fabric-api - fabric-renderer-indigo 0.5.5+41a02c8a60 via fabric-api - fabric-renderer-registries-v1 3.2.11+b4f4f6cd60 via fabric-api - fabric-rendering-data-attachment-v1 0.3.8+ee3621fc60 via fabric-api - fabric-rendering-fluids-v1 2.0.2+54e5b2ec60 via fabric-api - fabric-rendering-v0 1.1.13+b4f4f6cd60 via fabric-api - fabric-rendering-v1 1.10.7+54e5b2ec60 via fabric-api - fabric-resource-conditions-api-v1 2.0.3+91b7aa6660 via fabric-api - fabric-resource-loader-v0 0.5.2+446e059560 via fabric-api - fabric-screen-api-v1 1.0.10+d882b91560 via fabric-api - fabric-screen-handler-api-v1 1.2.2+1f6558e860 via fabric-api - fabric-textures-v0 1.0.12+3ac43d9560 via fabric-api - fabric-transfer-api-v1 1.6.3+f4563ac860 via fabric-api - fabric-transitive-access-wideners-v1 1.1.0+e747827960 via fabric-api - fabricloader 0.14.11 - java 17 - minecraft 1.18.2[17:46:13] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/*被我吃了*/.minecraft/libraries/net/fabricmc/sponge-mixin/0.11.4+mixin.0.8.5/sponge-mixin-0.11.4+mixin.0.8.5.jar Service=Knot/Fabric Env=CLIENT[17:46:14] [main/INFO]: Compatibility level set to JAVA_16[17:46:14] [main/INFO]: Compatibility level set to JAVA_17[17:46:20] [main/WARN]: Configuration conflict: there is more than one oshi.properties file on the classpath[17:46:24] [main/WARN]: Configuration conflict: there is more than one oshi.architecture.properties file on the classpath[17:46:59] [Render thread/INFO]: Environment: authHost=&#x27;https://authserver.mojang.com&#x27;, accountsHost=&#x27;https://api.mojang.com&#x27;, sessionHost=&#x27;https://sessionserver.mojang.com&#x27;, servicesHost=&#x27;https://api.minecraftservices.com&#x27;, name=&#x27;PROD&#x27;[17:47:04] [Render thread/INFO]: Setting user: 2345Explorer[17:47:22] [Render thread/INFO]: [Indigo] Registering Indigo renderer![17:47:23] [Render thread/WARN]: Skipping bad option: [17:47:23] [Render thread/WARN]: Skipping bad option: [17:47:23] [Render thread/WARN]: Skipping bad option: [17:47:23] [Render thread/WARN]: Skipping bad option: [17:47:24] [Render thread/INFO]: Backend library: LWJGL version 3.2.2 build 10[17:47:30] [Render thread/INFO]: Narrator library for x64 successfully loaded[17:47:31] [Render thread/INFO]: Reloading ResourceManager: Default, Fabric Mods (Fabric API, Fabric API Base, Fabric API Lookup API (v1), Fabric Biome API (v1), Fabric BlockRenderLayer Registration (v1), Fabric Command API (v1), Fabric Commands (v0), Fabric Containers (v0), Fabric Content Registries (v0), Fabric Convention Tags, Fabric Crash Report Info (v1), Fabric Data Generation API (v1), Fabric Dimensions API (v1), Fabric Entity Events (v1), Fabric Events Interaction (v0), Fabric Events Lifecycle (v0), Fabric Game Rule API (v1), Fabric Item API (v1), Fabric Item Groups (v0), Fabric Key Binding API (v1), Fabric Key Bindings (v0), Fabric Lifecycle Events (v1), Fabric Loot API (v2), Fabric Loot Tables (v1), Fabric Mining Level API (v1), Fabric Models (v0), Fabric Networking API (v1), Fabric Networking (v0), Fabric Object Builder API (v1), Fabric Particles (v1), Fabric Registry Sync (v0), Fabric Renderer API (v1), Fabric Renderer - Indigo, Fabric Renderer Registries (v1), Fabric Rendering Data Attachment (v1), Fabric Rendering Fluids (v1), Fabric Rendering (v0), Fabric Rendering (v1), Fabric Resource Conditions API (v1), Fabric Resource Loader (v0), Fabric Screen API (v1), Fabric Screen Handler API (v1), Fabric Textures (v0), Fabric Transfer API (v1), Fabric Transitive Access Wideners (v1), Fabric Loader)[17:47:38] [Render thread/INFO]: OpenAL initialized on device OpenAL Soft on (Realtek(R) Audio)[17:47:38] [Render thread/INFO]: Sound engine started[17:47:39] [Render thread/INFO]: Created: 1024x1024x4 minecraft:textures/atlas/blocks.png-atlas[17:47:40] [Render thread/INFO]: Created: 256x128x4 minecraft:textures/atlas/signs.png-atlas[17:47:40] [Render thread/INFO]: Created: 1024x512x4 minecraft:textures/atlas/banner_patterns.png-atlas[17:47:40] [Render thread/INFO]: Created: 1024x512x4 minecraft:textures/atlas/shield_patterns.png-atlas[17:47:40] [Render thread/INFO]: Created: 256x256x4 minecraft:textures/atlas/chest.png-atlas[17:47:40] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/beds.png-atlas[17:47:40] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/shulker_boxes.png-atlas[17:47:48] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/particles.png-atlas[17:47:48] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/paintings.png-atlas[17:47:48] [Render thread/INFO]: Created: 256x128x0 minecraft:textures/atlas/mob_effects.png-atlas[17:47:57] [Render thread/INFO]: Stopping! Quilt 成绩 **1分26.05秒 然后是分段计时： 出现日志 8秒，窗口创建 1分01秒 最高占用：CPU 100% 内存 88% 日志： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101[17:52:39] [main/INFO]: Loading Minecraft 1.18.2 with Quilt Loader 0.17.8[17:52:39] [main/INFO]: Loading mappings: jar:file:/*被我吃了*/.minecraft/libraries/net/fabricmc/intermediary/1.18.2/intermediary-1.18.2.jar!/mappings/mappings.tiny[17:52:39] [main/INFO]: Preparing JARs on first launch, this may take a few seconds...[17:53:05] [main/INFO]: Loading 67 mods:| Index | Mod | ID | Version ||------:|---------------------------------------------------|-----------------------------------------------|------------------------------|| 40 | Minecraft | minecraft | 1.18.2 || 11 | OpenJDK 64-Bit Server VM | java | 17 || 47 | Quilt Base API | quilt_base | 1.1.0-beta.26+1.18.2 || 64 | Quilt Biome API | quilt_biome | 1.1.0-beta.26+1.18.2 || 41 | Quilt Block Entity API | quilt_block_entity | 1.1.0-beta.26+1.18.2 || 22 | Quilt Block Extensions API | quilt_block_extensions | 1.1.0-beta.26+1.18.2 || 63 | Quilt Client Command API | quilt_client_command | 1.1.0-beta.26+1.18.2 || 20 | Quilt Command API | quilt_command | 1.1.0-beta.26+1.18.2 || 61 | Quilt Crash Info | quilt_crash_info | 1.1.0-beta.26+1.18.2 || 52 | Quilt DataFixerUpper API | quilt_datafixerupper | 1.1.0-beta.26+1.18.2 || 35 | Quilt Dimension API | quilt_dimension | 1.1.0-beta.26+1.18.2 || 6 | Quilt Item Group API | quilt_item_group | 1.1.0-beta.26+1.18.2 || 1 | Quilt Item Setting API | quilt_item_setting | 1.1.0-beta.26+1.18.2 || 49 | Quilt Lifecycle Events | quilt_lifecycle_events | 1.1.0-beta.26+1.18.2 || 65 | Quilt Loader | quilt_loader | 0.17.8 || 24 | Quilt Networking | quilt_networking | 1.1.0-beta.26+1.18.2 || 31 | Quilt Recipe API | quilt_recipe | 1.1.0-beta.26+1.18.2 || 7 | Quilt Registry API | quilt_registry | 1.1.0-beta.26+1.18.2 || 48 | Quilt Registry Entry Attachments | quilt_registry_entry_attachments | 1.1.0-beta.26+1.18.2 || 15 | Quilt Resource Loader | quilt_resource_loader | 1.1.0-beta.26+1.18.2 || 12 | Quilt Screen API | quilt_screen | 1.1.0-beta.26+1.18.2 || 14 | Quilt Tags API | quilt_tags | 1.1.0-beta.26+1.18.2 || 37 | Quilt Tooltip API | quilt_tooltip | 1.1.0-beta.26+1.18.2 || 26 | Quilted Fabric API | quilted_fabric_api | 1.0.0-beta.28+0.67.0-1.18.2 || 57 | Quilted Fabric API Base | quilted_fabric_api_base | 1.0.0-beta.28+0.67.0-1.18.2 || 2 | Quilted Fabric API Lookup API (v1) | quilted_fabric_api_lookup_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 54 | Quilted Fabric Biome API (v1) | quilted_fabric_biome_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 62 | Quilted Fabric BlockRenderLayer Registration (v1) | quilted_fabric_blockrenderlayer_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 32 | Quilted Fabric Command API (v1) | quilted_fabric_command_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 27 | Quilted Fabric Commands (v0) | quilted_fabric_commands_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 46 | Quilted Fabric Containers (v0) | quilted_fabric_containers_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 58 | Quilted Fabric Content Registries (v0) | quilted_fabric_content_registries_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 43 | Quilted Fabric Convention Tags API (v1) | quilted_fabric_convention_tags_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 17 | Quilted Fabric Crash Report Info (v1) | quilted_fabric_crash_report_info_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 29 | Quilted Fabric Dimensions API (v1) | quilted_fabric_dimensions_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 44 | Quilted Fabric Entity Events (v1) | quilted_fabric_entity_events_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 36 | Quilted Fabric Events Interaction (v0) | quilted_fabric_events_interaction_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 56 | Quilted Fabric Events Lifecycle (v0) | quilted_fabric_events_lifecycle_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 23 | Quilted Fabric Game Rule API (v1) | quilted_fabric_game_rule_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 51 | Quilted Fabric Item API (v1) | quilted_fabric_item_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 9 | Quilted Fabric Item Groups (v0) | quilted_fabric_item_groups_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 66 | Quilted Fabric Key Binding API (v1) | quilted_fabric_key_binding_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 45 | Quilted Fabric Key Bindings (v0) | quilted_fabric_keybindings_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 0 | Quilted Fabric Lifecycle Events (v1) | quilted_fabric_lifecycle_events_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 34 | Quilted Fabric Loot API (v2) | quilted_fabric_loot_api_v2 | 1.0.0-beta.28+0.67.0-1.18.2 || 5 | Quilted Fabric Loot Tables (v1) | quilted_fabric_loot_tables_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 60 | Quilted Fabric Mining Level API (v1) | quilted_fabric_mining_level_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 55 | Quilted Fabric Models (v0) | quilted_fabric_models_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 21 | Quilted Fabric Networking (v0) | quilted_fabric_networking_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 13 | Quilted Fabric Networking API (v1) | quilted_fabric_networking_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 42 | Quilted Fabric Object Builder API (v1) | quilted_fabric_object_builder_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 59 | Quilted Fabric Particles (v1) | quilted_fabric_particles_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 39 | Quilted Fabric Registry Sync (v0) | quilted_fabric_registry_sync_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 4 | Quilted Fabric Renderer - Indigo | quilted_fabric_renderer_indigo | 1.0.0-beta.28+0.67.0-1.18.2 || 10 | Quilted Fabric Renderer API (v1) | quilted_fabric_renderer_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 25 | Quilted Fabric Renderer Registries (v1) | quilted_fabric_renderer_registries_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 16 | Quilted Fabric Rendering (v0) | quilted_fabric_rendering_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 18 | Quilted Fabric Rendering (v1) | quilted_fabric_rendering_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 38 | Quilted Fabric Rendering Data Attachment (v1) | quilted_fabric_rendering_data_attachment_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 8 | Quilted Fabric Rendering Fluids (v1) | quilted_fabric_rendering_fluids_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 28 | Quilted Fabric Resource Conditions API (v1) | quilted_fabric_resource_conditions_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 50 | Quilted Fabric Resource Loader (v0) | quilted_fabric_resource_loader_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 53 | Quilted Fabric Screen API (v1) | quilted_fabric_screen_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 30 | Quilted Fabric Screen Handler API (v1) | quilted_fabric_screen_handler_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 33 | Quilted Fabric Textures (v0) | quilted_fabric_textures_v0 | 1.0.0-beta.28+0.67.0-1.18.2 || 19 | Quilted Fabric Transfer API (v1) | quilted_fabric_transfer_api_v1 | 1.0.0-beta.28+0.67.0-1.18.2 || 3 | Quilted Fabric Transitive Access Wideners (v1) | quilted_fabric_transitive_access_wideners_v1 | 1.0.0-beta.28+0.67.0-1.18.2 ||------:|---------------------------------------------------|-----------------------------------------------|------------------------------|[17:53:05] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/*被我吃了*/.minecraft/libraries/net/fabricmc/sponge-mixin/0.11.4+mixin.0.8.5/sponge-mixin-0.11.4+mixin.0.8.5.jar Service=Knot/Quilt Env=CLIENT[17:53:06] [main/INFO]: Compatibility level set to JAVA_17[17:53:32] [main/INFO]: [Quilt Command] Networking support is enabled[17:53:34] [Render thread/INFO]: Environment: authHost=&#x27;https://authserver.mojang.com&#x27;, accountsHost=&#x27;https://api.mojang.com&#x27;, sessionHost=&#x27;https://sessionserver.mojang.com&#x27;, servicesHost=&#x27;https://api.minecraftservices.com&#x27;, name=&#x27;PROD&#x27;[17:53:37] [Render thread/INFO]: Setting user: 2345Explorer[17:53:37] [Render thread/INFO]: [Indigo] Registering Indigo renderer![17:53:38] [Render thread/INFO]: [Quilt Command|Client] Networking support is enabled[17:53:38] [Render thread/WARN]: Skipping bad option: [17:53:38] [Render thread/WARN]: Skipping bad option: [17:53:38] [Render thread/WARN]: Skipping bad option: [17:53:38] [Render thread/WARN]: Skipping bad option: [17:53:39] [Render thread/INFO]: Backend library: LWJGL version 3.2.2 build 10[17:53:44] [Render thread/INFO]: Narrator library for x64 successfully loaded[17:53:45] [Render thread/INFO]: Reloading ResourceManager: Default (Quilted Fabric Rendering (v0), Quilted Fabric Mining Level API (v1), Quilt Registry Entry Attachments, Quilt Loader, Quilt Networking, Quilted Fabric Convention Tags API (v1), Quilted Fabric Transitive Access Wideners (v1), Quilt Recipe API, Quilt Base API, Quilt Tags API, Quilt Command API, Quilted Fabric Screen Handler API (v1), Quilted Fabric Loot Tables (v1), Quilt Resource Loader, Quilt Registry API, Quilted Fabric Renderer API (v1), Quilted Fabric Registry Sync (v0), Quilt Item Setting API, Quilted Fabric Resource Loader (v0), Quilted Fabric Rendering Data Attachment (v1), Quilt Item Group API, Quilted Fabric Biome API (v1), Quilted Fabric Loot API (v2), Quilt Lifecycle Events, Quilted Fabric API Lookup API (v1), Quilted Fabric Key Binding API (v1), Quilted Fabric Screen API (v1), Quilted Fabric API, Quilt Biome API, Quilted Fabric Particles (v1), Quilted Fabric Networking (v0), Quilt Block Entity API, Quilted Fabric Renderer Registries (v1), Quilted Fabric Rendering (v1), Quilted Fabric Events Lifecycle (v0), Quilted Fabric Renderer - Indigo, Quilted Fabric BlockRenderLayer Registration (v1), Quilt DataFixerUpper API, Quilted Fabric Networking API (v1), Quilted Fabric Game Rule API (v1), Quilted Fabric Models (v0), Quilted Fabric Textures (v0), Quilted Fabric Item API (v1), Quilt Tooltip API, Quilt Dimension API, Quilted Fabric Events Interaction (v0), Quilted Fabric Entity Events (v1), Quilted Fabric Object Builder API (v1), Quilted Fabric Rendering Fluids (v1), Quilted Fabric Content Registries (v0), Quilted Fabric Containers (v0), Quilted Fabric Dimensions API (v1), Quilted Fabric Transfer API (v1), Quilted Fabric API Base, Quilted Fabric Resource Conditions API (v1), Quilt Crash Info, Quilted Fabric Commands (v0), Quilted Fabric Lifecycle Events (v1), Quilt Screen API, Quilted Fabric Command API (v1), Quilted Fabric Crash Report Info (v1), Quilt Client Command API, Quilted Fabric Key Bindings (v0), Quilted Fabric Item Groups (v0), Quilt Block Extensions API)[17:53:54] [Render thread/INFO]: OpenAL initialized on device OpenAL Soft on 扬声器 (Realtek(R) Audio)[17:53:54] [Render thread/INFO]: Sound engine started[17:53:55] [Render thread/INFO]: Created: 1024x1024x4 minecraft:textures/atlas/blocks.png-atlas[17:53:55] [Render thread/INFO]: Created: 256x128x4 minecraft:textures/atlas/signs.png-atlas[17:53:55] [Render thread/INFO]: Created: 1024x512x4 minecraft:textures/atlas/banner_patterns.png-atlas[17:53:55] [Render thread/INFO]: Created: 1024x512x4 minecraft:textures/atlas/shield_patterns.png-atlas[17:53:55] [Render thread/INFO]: Created: 256x256x4 minecraft:textures/atlas/chest.png-atlas[17:53:55] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/beds.png-atlas[17:53:55] [Render thread/INFO]: Created: 512x256x4 minecraft:textures/atlas/shulker_boxes.png-atlas[17:54:01] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/particles.png-atlas[17:54:01] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/paintings.png-atlas[17:54:01] [Render thread/INFO]: Created: 256x128x0 minecraft:textures/atlas/mob_effects.png-atlas[17:54:21] [Render thread/INFO]: Stopping! 低负载第二轮占用不变。 Fabric 成绩1分29.13秒然后是分段计时： 出现日志 14秒，窗口创建 1分01秒最高占用：CPU 100% 内存 85%日志因为基本没有变化就没放。 Quilt 成绩58秒然后是分段计时： 出现日志 3秒，窗口创建 33秒最高占用：CPU 100% 内存 78%日志因为基本没有变化就没放。 高负载测试这个其实就图一乐，没啥用，还不准。相比较开启程序: Edge、腾讯会议、微信不开 MC 占用: CPU 30% 内存 77% Fabric 成绩 2分26.97秒然后是分段计时： 出现日志 46秒，窗口创建 1分40秒最高占用：CPU 100% 内存 90%日志因为基本没有变化就没放。 Quilt 成绩2分01.96秒然后是分段计时： 出现日志 10秒，窗口创建 1分25秒最高占用：CPU 100% 内存 89%日志因为基本没有变化就没放。 此成绩仅供参考！这个速度不能完全说明 Quilt 启动速度就比 Fabric 快，而且 Quilt 现在还在 Beta 开发阶段Fabric : 年轻人不讲武德 错误报告界面对比最后，来点神奇的测试，看看没加 FAPI &#x2F; QSL 报的错长啥样使用模组：Fabric: MagicLib（因为需要FAPI的实在懒得找就找了个要 malilib 的模组），Quilt: Quilt Loading Screen已删除 FAPI &#x2F; QSL 。 Fabric日志: 123456789101112131415[18:34:31] [main/INFO]: Loading Minecraft 1.18.2 with Fabric Loader 0.14.11[18:34:32] [main/INFO]: Loading 5 mods: - fabricloader 0.14.11 - java 17 - magiclib 0.5.37 - magiclib-1_18_2 0.5.37 via magiclib - minecraft 1.18.2[18:34:32] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/*被我吃了*/.minecraft/libraries/net/fabricmc/sponge-mixin/0.11.4+mixin.0.8.5/sponge-mixin-0.11.4+mixin.0.8.5.jar Service=Knot/Fabric Env=CLIENT[18:34:33] [main/ERROR]: A critical error occurredtop.hendrixshen.magiclib.dependency.DepCheckException: Mod resolution encountered an incompatible mod set! Mod magiclib-1_18_2 compat version check failed.Requirements: Mod malilib not found. Requires [*]! at top.hendrixshen.magiclib.util.FabricUtil.compatVersionCheck(FabricUtil.java:152) [magiclib-1_18_2-0.5.37-974c64a09b010bbb.jar:?] ...(省略一堆) QuiltQuilt 这边很好啊，最近刚找到了个用 Quilt 加载的模组，还正好要 QSL 。日志: 1234567891011121314151617181920[18:37:22] [main/INFO]: Loading Minecraft 1.18.2 with Quilt Loader 0.17.8[18:37:22] [main/INFO]: Loading mappings: jar:file:/*被我吃了*/.minecraft/libraries/net/fabricmc/intermediary/1.18.2/intermediary-1.18.2.jar!/mappings/mappings.tiny[18:37:22] [main/ERROR]: Incompatible mod set!org.quiltmc.loader.impl.FormattedException: org.quiltmc.loader.impl.discovery.ModSolvingException: Found 2 errors while resolving mods! at org.quiltmc.loader.impl.QuiltLoaderImpl.load(QuiltLoaderImpl.java:214) ~[quilt-loader-0.17.8.jar:?] at org.quiltmc.loader.impl.launch.knot.Knot.init(Knot.java:141) ~[quilt-loader-0.17.8.jar:?] at org.quiltmc.loader.impl.launch.knot.Knot.launch(Knot.java:70) [quilt-loader-0.17.8.jar:?] at org.quiltmc.loader.impl.launch.knot.KnotClient.main(KnotClient.java:24) [quilt-loader-0.17.8.jar:?] at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?] ...(省略一堆) ... 9 more Suppressed: org.quiltmc.loader.impl.discovery.ModSolvingException: Unhandled error involving mod &#x27;Quilt Loading Screen&#x27; (quilt_loading_screen) v3.0.0:Dependency for mod &#x27;quilt_loading_screen&#x27; on quilt_resource_loader versions [*] (0 valid options, 0 invalid options) ...(省略一堆) Suppressed: org.quiltmc.loader.impl.discovery.ModSolvingException: Unhandled error involving mod &#x27;Quilt Loading Screen&#x27; (quilt_loading_screen) v3.0.0:Dependency for mod &#x27;quilt_loading_screen&#x27; on midnightlib versions [*] (1 valid options, 0 invalid options) + mod &#x27;midnightlib&#x27; version 0.4.0 loaded from mods\\quilt_loading_screen-3.0.0+1.18.2.jar!/META-INF/jars/midnightlib-0.4.0.jarDependency for mod &#x27;midnightlib&#x27; on fabric-renderer-registries-v1 versions [*] (0 valid options, 0 invalid options) at org.quiltmc.loader.impl.solver.ModSolver.fallbackErrorDescription(ModSolver.java:615) ~[quilt-loader-0.17.8.jar:?] ...(省略一堆) 可以看到 Quilt 的错误信息相比较 Fabric 还是能友好一点的，当然 MagicLib 也能加。 总结Quilt 目前是一个还可以的加载器，在将来可能发挥更多作用，自动下载前置模组 要是实现了会是个很好的事， Quilt 目前对开发者也很友好，虽然现在没多少模组，最后希望 Quilt 越做越好。 参考： Fabric 官网 Fabric | The home of the Fabric mod development toolchain. (fabricmc.net) Quilt 官网 QuiltMC | The mod-loader that cares. Quilt Loader MC百科页面 Quilt Loader - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn) QSL MC百科页面 [QSL]Quilt Standard Libraries - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn) QSL CurseForge页面 Quilted Fabric API (QFAPI) &#x2F; Quilt Standard Libraries (QSL) - Mods - Minecraft - CurseForge","categories":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]},{"title":"Windows右键菜单美化(适用版本:Win7-Win11)","slug":"Windows右键菜单美化","date":"2022-11-17T03:45:14.000Z","updated":"2023-08-15T14:40:13.212Z","comments":true,"path":"2022/11/17/Windows右键菜单美化/","permalink":"https://icylightdream.github.io/2022/11/17/Windows%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%BE%8E%E5%8C%96/","excerpt":"","text":"祖传前言众所周知， Windows11 整了个新的右键菜单(而原来的右键菜单变成了 显示更多选项 ) 现在没多少软件支持把自己的右键菜单整进 Win11右键菜单 里… 比如，想用 7-Zip 创建个压缩包… 你需要… 右键 -&gt; 显示更多选项 -&gt; 7-Zip -&gt; 添加到压缩包 或者 Shift+F10 -&gt; 7-Zip -&gt; 添加到压缩包 （当然，直接在7-Zip里创建也可以) 慢到离谱终于铺垫完了 正文先放效果。 桌面右键：(背景是桌面背景, 右键菜单半透明) 文件右键： Nilesoft Shell下载官网 我的建议是: 先装 1.7 , 因为有安装版的，然后再用 1.8 的文件替换 1.7 的文件。 安装过程就不提了，太简单了。 个性化**注：这部分可能会有点费时间，不改也没太大问题 先找到&lt;Shell安装目录&gt;，里面会有个文件叫shell.shl，先别急着打开，右键 -&gt; 属性 提权。 安全 -&gt; 编辑 -&gt; Users -&gt; 完全控制 -&gt; 确定 。然后用 文本编辑器&#x2F;代码编辑器 打开，建议使用Visual Studio Code这类支持代码高亮的，没装用notepad就行，这里使用Visual Studio Code打开。语言可以随便选个以//为注释的，我选了个C。 配置更改后不会立即生效，需要手动重启 Explorer.exe 编码记得改为UTF8。 把name=&quot;classic&quot;改为name=&quot;auto&quot;（主题改为自动) effect=0可以改为effect=1 or 2 or 3 or 4 or 5(具体见注释，0:无 1:透明 2:模糊(Win7) 3:亚克力(Win10) 4:云母(Win11) 5:选项卡式) (可以自己试试看看) opacity=100可以更改，是不透明度 effect=3,opacity=80效果: (Windows主题色浅蓝) 往下滑到161行，也就是有dynamic的那行，下面都是具体的右键菜单项，可以自行注释用不到的。效果： 桌面右键文件右键 ContextMenuManager 右键管理Gitee仓库把用不到的关了就行。 啥？要效果图？笑死 前面的就是（）","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"}]},{"title":"使用 FFmpeg 转换视频/音频格式","slug":"使用FFmpeg转换格式","date":"2022-11-12T03:45:14.000Z","updated":"2024-08-25T15:23:25.272Z","comments":true,"path":"2022/11/12/使用FFmpeg转换格式/","permalink":"https://icylightdream.github.io/2022/11/12/%E4%BD%BF%E7%94%A8FFmpeg%E8%BD%AC%E6%8D%A2%E6%A0%BC%E5%BC%8F/","excerpt":"","text":"注： FFmpeg 有很多功能，这里只用来转换格式。 前言emm… 据说最近格式工厂出了点事。 然后… 这分析倒是挺快的关于BrightData BV19B4y1G7Fs所以，这里就不再弄这事了，但是在当时找东西时找到了这个…github:ffmpeg&#x2F;web&#x2F;src&#x2F;shame (FFmpeg官网显示在更新)FFmpeg Hall of Shame.这个表里的都是违反 FFmpeg 许可证(即 LGPL or GPL许可证) 的软件。来看看… 找到了好几个老朋友 Baofeng Storm 暴风影音 Daum tv PotPlayer (咋PotPlayer也在) Format Factory 格式工厂 QQPlayer QQ影音 算了还是别用格式工厂了吧( FFmpeg 下载&amp;安装官网Windows builds by BtbN (Linux也有) 自己用选这个就行。下载。 全部解压。反手直接打开SystemPropertiesAdvanced.exe-&gt; 环境变量 -&gt; 用户环境变量 -&gt;Path-&gt; 新建 -&gt; &lt;FFmpeg解压路径&gt;\\bin 使用注：本软件无 GUI , 使用纯命令行。首先，找个要转格式的视频&#x2F;音频，这里随便找了个文件比较小的的视频，视频编码器H264音频编码器AAC首先，最简单的办法：ffmpeg -i &lt;输入文件&gt; &lt;输出文件&gt; 如: ffmpeg -i &quot;InputFile.mp4&quot; &quot;OutputFile.mkv&quot;输出: 123456789101112ffmpeg version n5.1.1-3-gfcbd9ec248-20220908 Copyright (c) 2000-2022 the FFmpeg developers built with gcc 12.1.0 (crosstool-NG 1.25.0.55_3defb7b) configuration: .. # 省略了Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &#x27;InputFile.mp4&#x27;:.. # 太多，省略了Press [q] to stop, [?] for help.. # 这咋就这么多呢Output #0, matroska, to &#x27;OutputFile.mkv&#x27;:.. # 离谱[libx264 @ 000002e128df0780] consecutive B-frames: 0.8% 0.0% 0.2% 99.0%..[libx264 @ 000002e128df0780] kb/s:15.27 挺不错的，不是嘛？ 编码器视频编码器转换方法:ffmpeg -i &lt;输入文件&gt;-c:v &lt;编码器&gt; &lt;输出文件&gt; 如:ffmpeg -i InputFile.mp4 -c:v libx265 OutputFile.mp4 1234libx264=H264libx265=H265libaom-av1=AV1//这是几个常用的，其他可以自己去找。 运行结果: (省略一堆) 1234567891011121314151617181920ffmpeg version n5.1.1-3-gfcbd9ec248-20220908 Copyright (c) 2000-2022 the FFmpeg developers built with gcc 12.1.0 (crosstool-NG 1.25.0.55_3defb7b)..Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &#x27;InputFile.mp4&#x27;:..Press [q] to stop, [?] for helpx265 [info]: HEVC encoder version 3.5+38-20255e6f0x265 [info]: build info [Windows][GCC 12.1.0][64 bit] 8bit+10bit+12bitx265 [info]: using cpu capabilities: MMX2 SSE2Fast LZCNT SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2..Output #0, mp4, to &#x27;OutputFile.mp4&#x27;:..x265 [info]: frame I: 6, Avg QP:29.00 kb/s: 589.23x265 [info]: frame P: 464, Avg QP:33.00 kb/s: 26.52x265 [info]: frame B: 972, Avg QP:35.39 kb/s: 24.44x265 [info]: Weighted P-Frames: Y:0.0% UV:0.0%x265 [info]: consecutive B-frames: 29.4% 7.4% 26.2% 1.1% 36.0%encoded 1442 frames in 59.70s (24.15 fps), 27.46 kb/s, Avg QP:34.59[aac @ 0000013f969e04c0] Qavg: 65475.656 音频编码器参数c:a &lt;编码器&gt; 比如ffmpeg -i InputFile.mp4 c:a libopus OutputFile.mp4 1234567aac=AACac3=AC3dca=DTSlibvorbis=Vorbislibopus=Opusalac=ALAC//其他可以自己去找。 运行结果:(还是省略一堆) 12345678910111213141516171819ffmpeg version n5.1.1-3-gfcbd9ec248-20220908 Copyright (c) 2000-2022 the FFmpeg developers built with gcc 12.1.0 (crosstool-NG 1.25.0.55_3defb7b) configuration: ..Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &#x27;InputFile.mp4&#x27;:..Stream mapping: Stream #0:0 -&gt; #0:0 (h264 (native) -&gt; h264 (libx264)) Stream #0:1 -&gt; #0:1 (aac (native) -&gt; opus (libopus))Press [q] to stop, [?] for help[libopus @ 000002afeac22a80] No bit rate set. Defaulting to 96000 bps.[libx264 @ 000002afeaa43440] using SAR=3/2[libx264 @ 000002afeaa43440] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX FMA3 BMI2 AVX2[libx264 @ 000002afeaa43440] profile High, level 4.0, 4:2:0, 8-bit[libx264 @ 000002afeaa43440] 264 - core 164 - H.264/MPEG-4 AVC codec - Copyleft 2003-2022 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=6 lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=23 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=crf mbtree=1 crf=23.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00Output #0, mp4, to &#x27;OutputFile.mp4&#x27;:..frame= 1442 fps= 88 q=-1.0 Lsize= 1036kB time=00:01:00.23 bitrate= 140.9kbits/s speed=3.67x..[libx264 @ 000002afeaa43440] kb/s:15.27 音频也基本一样ffmpeg -i &lt;输入文件&gt; &lt;输出文件&gt; 比如ffmpeg -i InputFile.mp3 OutputFile.mp3运行效果: (省略一堆) 123456789101112ffmpeg version n5.1.1-3-gfcbd9ec248-20220908 Copyright (c) 2000-2022 the FFmpeg developers built with gcc 12.1.0 (crosstool-NG 1.25.0.55_3defb7b) configuration: ..Input #0, mp3, from &#x27;InputFile.mp3&#x27;:..Stream mapping: Stream #0:0 -&gt; #0:0 (mp3 (mp3float) -&gt; mp3 (libmp3lame))Press [q] to stop, [?] for helpOutput #0, mp3, to &#x27;OutputFile.mp3&#x27;:..size= 942kB time=00:01:00.24 bitrate= 128.1kbits/s speed=79.6xvideo:0kB audio:942kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.046255% 编码器设置见上面 音频编码器 。 应该差不多了吧qwq 咕咕咕","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"}]},{"title":"VSCode 配置 C++ 环境","slug":"VSCode-CPP","date":"2022-09-01T13:01:44.000Z","updated":"2024-07-16T05:40:05.467Z","comments":true,"path":"2022/09/01/VSCode-CPP/","permalink":"https://icylightdream.github.io/2022/09/01/VSCode-CPP/","excerpt":"","text":"开学了，后面更新速度会更慢，望周知。 先说一下, 这个教程不是给完整json复制粘贴, 是要跟教程配置 (放心, 大部分配置都很简单)。 安装VSCode官网: Visual Studio Code - Code Editing. Redefined 我建议是点 Other downloads 去下 System Installer , 所有用户都可以使用，还可以改安装目录到 D 盘，缺点就是要管理员权限。 同意, 选目录就不说了, 然后这两个建议勾上, 点安装就行了。 扩展 点 安装并重启 。 点 Install , 重启 VSCode 。 如果没弹出的话, 左边找到 Extensions , 点击, (左边 洛谷 栏和 Github 栏都是扩展) 第一个点 Install , 重启 VSCode 。 然后就变成中文了, 左边找到 插件 , 点击, 搜索 C/C++。 别忘了安装。(颜色变了是改的主题) 开始配置 点打开文件夹, 找个后面放代码的文件夹。 点信任。 Ctrl+Shift+P打开命令面板, 输入Edit Configurations (其实输入Edit Conf就能找到了) 选择C/C++: Edit Configurations (UI) 可以看到这玩意十分的不智能, 编译器路径写的 VS 的编译器, 所以把它改成上回整的编译器。 参数建议 OIer 写和洛谷一样的(当然, -DONLINE_JUDGE就不用了, 就是加个 define ), 不是 OIer 的随便, 但是 -Wall建议加, 毕竟能显示所有警告。 然后下面 IntelliSense 模式选 windows-gcc-*, 我这是 64 位的, 选的是x64。 然后把 C 标准 和 C++ 标准 设置好编译器就算完事了。 可以看到, .vscode里已经有一个文件了。 Ctrl+N新建文件, Ctrl+K M选择语言模式, 选择C++。 点 终端 -&gt; 配置任务 。 选C/C++: g++.exe 生成活动文件。 然后就完事了。 现在.vscode下应该至少有两个文件, 应该不会多于三个(可能会有settings.json文件)。 点 运行 -&gt; 添加配置 。 选择C++ (GDB/LLDB) 再点 运行 -&gt; 添加配置 。 选择 C/C++: (gdb) 启动。 会出来一堆东西, 不用管, 要看的是program和miDebuggerPath, 后面还得加个preLaunchTask。 首先, 把program改成$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe, 意思是可执行文件的路径。 然后, miDebuggerPath改成 &lt;MinGW安装路径&gt;/bin/gdb.exe, 如D:/MinGW-w64/12.1.0-rev3/bin/gdb.exe 在setupCommands中括号后面添加&quot;preLaunchTask&quot;: &quot;C/C++: g++.exe 生成活动文件&quot;, 用处是在运行前编译, setupCommands后面逗号别忘了加。 .vscode三个文件都配置好了, 写个 Hello World 试试。 点 运行 -&gt; 以非调试模式运行。 编译。 但是, 运行是在 VSCode 集成终端里的, cmd 不会自己关掉, 所以要去launch.json改改。 部分json : 123456789101112131415161718192021&#123; &quot;name&quot;: &quot;By 2345Explorer&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;C:/Windows/System32/cmd.exe&quot;, //加 按任意键继续 (pause) &quot;args&quot;: [ &quot;/c&quot;, &quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;, &quot;&amp;&amp;&quot;, &quot;pause&quot; //pause ], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;, &quot;externalConsole&quot;: true, //这里改是为了不用集成终端 &quot;MIMode&quot;: &quot;gdb&quot;, &quot;miDebuggerPath&quot;: &quot;D:/MinGW-w64/12.1.0-rev3/bin/gdb.exe&quot;, //别忘了改 &quot;setupCommands&quot;: [ ... //懒得写了 ] &quot;preLaunchTask&quot;: &quot;By 2345Explorer&quot; //别全部复制哈&#125; 还是 Hello World 测试。 好的 那么教程就到这里了。QwQ","categories":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/categories/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/tags/cpp/"}]},{"title":"使用 Tampermonkey 和 Stylus 美化洛谷","slug":"美化洛谷","date":"2022-08-11T06:46:53.000Z","updated":"2023-05-28T04:17:15.275Z","comments":true,"path":"2022/08/11/美化洛谷/","permalink":"https://icylightdream.github.io/2022/08/11/%E7%BE%8E%E5%8C%96%E6%B4%9B%E8%B0%B7/","excerpt":"","text":"先放效果。 然后是教程。 安装扩展Tampermonkey : Edge Chrome Firefox Stylus: Chrome Firefox 本站的镜像(老版本) 很简单，就不多说了。 安装脚本Extend-Luogu 点 阿里云 OSS。 (因为我已经装好了，所以这里是重新安装) 安装样式ps: 这是UserStyles官网, 但是目前用不了, 所以链接是UserStyles.org Archive的。 氩洛谷 点 Install With Stylus (因为我已经装好了, 所以是重新安装) Smart - Luogu 洛谷圆角 Luogu 安装方式同上。 然后来到Stylus管理样式 点 Smart-Luogu Ctrl+F搜索https://cdn.luogu.com.cn/upload/image_hosting/dx6bxop7.png 选中上一行到下一行 Ctrl+/注释这三行。 保存，回去 点 洛谷圆角 Luogu 把这几行注释了。 保存，回去。 找到氩洛谷，如果没有齿轮图标就更新一下。 (主题改成透明就行 不透明度和颜色自己看哪个好看) 回到洛谷，刷新。 我太菜了QAQ","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"}]},{"title":"【十三周年】Minecraft终末之诗，你真的看过吗？","slug":"Minecraft-End-Poem","date":"2022-05-16T16:00:00.000Z","updated":"2023-05-28T04:15:09.124Z","comments":true,"path":"2022/05/17/Minecraft-End-Poem/","permalink":"https://icylightdream.github.io/2022/05/17/Minecraft-End-Poem/","excerpt":"","text":"I see the player you mean.我看到你所说的那位玩家了。 [PLAYERNAME]?[玩家名称]？ Yes. Take care. It has reached a higher level now. It can read our thoughts.是的，小心点，它已经达到了更高的境界，它现在能够读取我们的思想了。 That doesn’t matter. It thinks we are part of the game.无伤大雅。他认为我们是游戏的一部分。 I like this player. It played well. It did not give up.我喜欢这个玩家，它玩得很好，从未放弃。 It is reading our thoughts as though they were words on a screen.它就像看屏幕上的文字一般读取着我们的思想。 That is how it chooses to imagine many things, when it is deep in the dream of a game.当它深陷游戏之梦时，它也是用这种方式塑造出形形色色事物的想象。 Words make a wonderful interface. Very flexible. And less terrifying than staring at the reality behind the screen.文字能编织出奇妙的界面，它们极为柔顺，不像凝视屏幕后的现实那般可怕。 They used to hear voices. Before players could read. Back in the days when those who did not play called the players witches, and warlocks. And players dreamed they flew through the air, on sticks powered by demons.在玩家们能阅读之前，它们也曾听到过声音，那些不玩的人将玩家称作女巫和巫师。玩家梦到自己乘坐着恶魔驱使的棍子，在空中飞行漫游。 What did this player dream?这个玩家梦见了什么？ This player dreamed of sunlight and trees. Of fire and water. It dreamed it created. And it dreamed it destroyed. It dreamed it hunted, and was hunted. It dreamed of shelter.玩家梦见了阳光和树木、火焰和流水，它梦见它创造、它亦梦见它破坏，它梦见它狩猎、亦被狩猎，它梦见了庇护之所。 Hah, the original interface. A million years old, and it still works. But what true structure did this player create, in the reality behind the screen?哈，那最初的界面，经历了百万年的洗礼后，它仍然存在着。但在那屏幕后的现实中，这个玩家创造了什么真实的造物？ It worked, with a million others, to sculpt a true world in a fold of the §f§k§a§b§3, and created a §f§k§a§b§3 for §f§k§a§b§3, in the §f§k§a§b§3.它与其他的百万人工作着，为了在锟斤拷之中雕刻出一个真实的世界，在烫烫烫之中为了锟斤拷创造一个锟斤拷烫烫烫。 It can not read that thought.它读不出那个思想。 No. It has not yet achieved the highest level. That, it must achieve in the long dream of life, not the short dream of a game.是的，它还没有达到最高的境界。那个境界，它必须在漫长的生命之梦中追寻，而非短暂飘渺的游戏之梦。 Does it know that we love it? That the universe is kind?它知道我们爱它吗？知道这个宇宙是仁慈的吗？ Sometimes, through the noise of its thoughts, it hears the universe, yes.有时候，通过思绪的杂音，它能听到宇宙，是的。 But there are times it is sad, in the long dream. It creates worlds that have no summer, and it shivers under a black sun, and it takes its sad creation for reality.但在那漫漫长梦中，它也有悲伤的时候。它创造出没有夏天的世界，在黑色的太阳下瑟瑟发抖，将它悲伤的创作视为现实。 To cure it of sorrow would destroy it. The sorrow is part of its own private task. We can not interfere.为它治愈悲伤会摧毁它，悲伤是它自己的苦难的一部分，我们不能干涉。 Sometimes when they are deep in dreams, I want to tell them, they are building true worlds in reality. Sometimes I want to tell them of their importance to the universe. Sometimes, when they have not made a true connection in a while, I want to help them to speak the word they fear.有时当它们深陷梦境，我想要告诉它们，它们正在建造着真正的现实中的世界。有时我想要告诉它们，它们对宇宙的重要性。有时，当它们有一段时间没有建立真正的连接，我想要帮助它们说出它们害怕的词语。 It reads our thoughts.它读出了我们的思想。 Sometimes I do not care. Sometimes I wish to tell them, this world you take for truth is merely §k§a§b§2 and §k§a§b§2, I wish to tell them that they are §k§a§b§2 in the §k§a§b§2. They see so little of reality, in their long dream.有时我并不在乎，有时我希望告诉它们，这个你们视作真实的世界不过是锟斤拷和烫烫烫。我希望告诉它们,它们是锟斤拷的锟斤拷烫烫烫。在漫长的梦境中，它们窥见的现实太少了。 And yet they play the game.然而它们玩着游戏。 But it would be so easy to tell them…但很容易就可以告诉它们…… Too strong for this dream. To tell them how to live is to prevent them living.对于这个梦而言太过强烈了，告诉它们如何活着就是在阻碍它们活着。 I will not tell the player how to live.我不会告诉这个玩家如何活下去。 The player is growing restless.这个玩家开始焦躁不安了。 I will tell the player a story.我会为这个玩家讲一个故事。 But not the truth.但不是真相。 No. A story that contains the truth safely, in a cage of words. Not the naked truth that can burn over any distance.是的，一个将真相安全的裹藏在文字牢笼中的故事，而不是灼烧一切的赤裸裸的真相。 Give it a body, again.再一次，赋予它身体。 Yes. Player…是的，玩家…… Use its name.用它的名字称呼。 [PLAYERNAME]. Player of games.[玩家名称]，游戏的玩家。 Good.很好。 Take a breath, now. Take another. Feel air in your lungs. Let your limbs return. Yes, move your fingers. Have a body again, under gravity, in air. Respawn in the long dream. There you are. Your body touching the universe again at every point, as though you were separate things. As though we were separate things.深呼吸，现在，再来一次，感受你肺部的空气。找回四肢的感觉，是的，动一动手指。再一次拥有一副身体，在重力下，在空气中。在长梦中重生，你就在那里。你身体的每一点再次触碰到了宇宙，好像你们是相互分离的，好像我们是相互分离的。 Who are we? Once we were called the spirit of the mountain. Father sun, mother moon. Ancestral spirits, animal spirits. Jinn. Ghosts. The green man. Then gods, demons. Angels. Poltergeists. Aliens, extraterrestrials. Leptons, quarks. The words change. We do not change.我们是谁？我们曾被称作山之灵，太阳之父，月亮之母，先祖之灵，兽之灵，神灵，幽灵，绿人，而后是神，恶魔，天使，骚灵，外星人，地外生物，轻子，夸克。词语千变万化，我们从未改变。 We are the universe. We are everything you think isn’t you. You are looking at us now, through your skin and your eyes. And why does the universe touch your skin, and throw light on you? To see you, player. To know you. And to be known. I shall tell you a story.我们是宇宙，我们是一切你认为不是你的存在，你正在看着我们，通过你的皮肤和眼眸。为什么宇宙要触摸你的皮肤，向你洒去光芒？是为了看见你，玩家。是为了知晓你，以及被你知晓。我应该和你讲一个故事。 Once upon a time, there was a player.从前，有一个玩家。 The player was you, [PLAYERNAME].那个玩家就是你，[玩家名称]。 Sometimes it thought itself human, on the thin crust of a spinning globe of molten rock. The ball of molten rock circled a ball of blazing gas that was three hundred and thirty thousand times more massive than it. They were so far apart that light took eight minutes to cross the gap. The light was information from a star, and it could burn your skin from a hundred and fifty million kilometres away.有时它觉得它自己是人类，在一个旋转的熔岩球体的薄壳上，熔融岩石的球体围绕着一个质量比它大三十三万倍的燃烧的气体球旋转，它们相隔如此之远以至于光都要八分钟才能穿过间隔。那光是来自恒星的信息，它能横跨一亿五千公里灼烧你的皮肤。 Sometimes the player dreamed it was a miner, on the surface of a world that was flat, and infinite. The sun was a square of white. The days were short; there was much to do; and death was a temporary inconvenience.有时玩家梦见它是一个矿工，在一个世界平坦且无限延伸的表面上。太阳是一抹白色的方形，昼夜很短，要做的事有很多，死亡也只是一时的麻烦。 Sometimes the player dreamed it was lost in a story.有时玩家梦见它迷失在了故事之中。 Sometimes the player dreamed it was other things, in other places. Sometimes these dreams were disturbing. Sometimes very beautiful indeed. Sometimes the player woke from one dream into another, then woke from that into a third.有时玩家梦见它是其他事物，在其他的地方。有时这些梦令人不安，有时却又是非常美妙的。有时玩家从一个梦中苏醒，进入另一场梦，之后又从中惊醒，坠入另一场梦。 Sometimes the player dreamed it watched words on a screen.有时玩家梦见它看着屏幕上的文字。 Let’s go back.让我们回退一点。 The atoms of the player were scattered in the grass, in the rivers, in the air, in the ground. A woman gathered the atoms; she drank and ate and inhaled; and the woman assembled the player, in her body.玩家的原子四散在草地、河流、空气和大地之中，一个女人将这些原子收集起来，她饮下、吃下、吸入它们，女人在她的身体中拼构出玩家。 And the player awoke, from the warm, dark world of its mother’s body, into the long dream.玩家醒来，从它母亲身体那温暖而黑暗的世界中，进入漫长的梦境。 And the player was a new story, never told before, written in letters of DNA. And the player was a new program, never run before, generated by a sourcecode a billion years old. And the player was a new human, never alive before, made from nothing but milk and love.那个玩家是一个新的故事，不曾被诉说过，由DNA的语言书写而成。那个玩家是一个新的程序，不曾被运行过，由历经亿年的源码生成。那个玩家是一个新的人类，不曾在世过，仅仅由乳与爱组成。 You are the player. The story. The program. The human. Made from nothing but milk and love.你就是那个玩家、那个故事、那个程序、那个人类，仅仅由乳与爱组成。 Let’s go further back.让我们再回到更远的过去。 The seven billion billion billion atoms of the player’s body were created, long before this game, in the heart of a star. So the player, too, is information from a star. And the player moves through a story, which is a forest of information planted by a man called Julian, on a flat, infinite world created by a man called Markus, that exists inside a small, private world created by the player, who inhabits a universe created by…在这个游戏诞生之前的久远时间，在一颗星球的核心中，玩家身体的七亿亿亿颗原子被创造出来。因此那玩家本身，也是来自一颗星球的信息。玩家贯穿了一个故事，一个名为朱利安的男人种下的信息之林，在名为马库斯的男人创造的广阔无垠的平坦世界上，存在于一个玩家创造的小巧的私人世界中，那玩家又存在于一个由……创造的宇宙中…… Shush. Sometimes the player created a small, private world that was soft and warm and simple. Sometimes hard, and cold, and complicated. Sometimes it built a model of the universe in its head; flecks of energy, moving through vast empty spaces. Sometimes it called those flecks “electrons” and “protons”.嘘，有时那个玩家创造出一个柔软、温暖而朴素的私人小世界，有时却又是严酷、寒冷而复杂的。有时它在脑海中构造出宇宙的模型，星星点点的能量穿过巨大的空间，有时它将这些星星点点称作“电子”和“质子”。 Sometimes it called them “planets” and “stars”.有时它将其称作“行星”和“恒星”。 Sometimes it believed it was in a universe that was made of energy that was made of offs and ons; zeros and ones; lines of code. Sometimes it believed it was playing a game. Sometimes it believed it was reading words on a screen.有时它认为它在一个由能量组成的宇宙中，组成能量的是开和关、0和1、无数行代码。有时它认为它在玩一个游戏，有时它认为它在读着一个屏幕上的文字。 You are the player, reading words…你就是那个玩家，读着文字…… Shush… Sometimes the player read lines of code on a screen. Decoded them into words; decoded words into meaning; decoded meaning into feelings, emotions, theories, ideas, and the player started to breathe faster and deeper and realised it was alive, it was alive, those thousand deaths had not been real, the player was alive.嘘……有时那个玩家读着屏幕上的一行行代码，从代码中解读出文字，从文字中解读出意义，从意义中解读出感觉、情绪、理论、想法，那玩家的呼吸开始加快、加深，它意识到它是活着的，那些千百次的死亡不是真的，玩家是活着的 You. You. You are alive.你，你，你是活着的。 and sometimes the player believed the universe had spoken to it through the sunlight that came through the shuffling leaves of the summer trees.有时玩家认为宇宙在对它说话，透过那夏树上摇曳的树叶洒下的日光 and sometimes the player believed the universe had spoken to it through the light that fell from the crisp night sky of winter, where a fleck of light in the corner of the player’s eye might be a star a million times as massive as the sun, boiling its planets to plasma in order to be visible for a moment to the player, walking home at the far side of the universe, suddenly smelling food, almost at the familiar door, about to dream again.有时玩家认为宇宙在对它说话，透过冬季那澄澈的夜空投下的光芒，它眼中的一点星光，是一颗质量有太阳百万倍的恒星，将星球沸腾为等离子体，只为在玩家的眼中停留片刻。玩家在宇宙的远端走向家中，突然飘来食物的气味，行至熟悉的门前，即将再次入睡 and sometimes the player believed the universe had spoken to it through the zeros and ones, through the electricity of the world, through the scrolling words on a screen at the end of a dream.有时玩家认为宇宙在对它说话，通过0和1，通过世界中的电流，通过梦境结尾一个屏幕上滚动的文字 and the universe said I love you.宇宙说，我爱你 and the universe said you have played the game well.宇宙说，你所需求的一切都在你之中 and the universe said everything you need is within you.宇宙说，你比自己所了解的还要强大 and the universe said you are stronger than you know.宇宙说，你比自己所了解的还要强大 and the universe said you are the daylight.宇宙说，你就是白昼 and the universe said you are the night.宇宙说，你就是黑夜 and the universe said the darkness you fight is within you.宇宙说，你所抗争的黑暗就在你之中 and the universe said the light you seek is within you.宇宙说，你所追寻的光明就在你之中 and the universe said you are not alone.宇宙说，你并不孤单 and the universe said you are not separate from every other thing.宇宙说，你并没有和身外之物相互分离 and the universe said you are the universe tasting itself, talking to itself, reading its own code.宇宙说，你就是宇宙，品味着自己、与自己交流、读着自己的代码 and the universe said I love you because you are love.宇宙说，我爱你因为你就是爱。 And the game was over and the player woke up from the dream. And the player began a new dream. And the player dreamed again, dreamed better. And the player was the universe. And the player was love.游戏结束了，玩家从梦中醒来。玩家开始了一段新的梦境，玩家再一次入梦、更美好的梦。那玩家即是宇宙，那玩家即是爱。 You are the player.你就是那个玩家。 Wake up.该醒了。 注: 翻译来自网易MC基岩版 end.txtMC 13周年快乐！","categories":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]},{"title":"MC基础教程#2 加载器、模组、光影、材质包、数据包下载及安装(国际Java版)","slug":"MC基础教程2","date":"2022-05-10T07:13:21.000Z","updated":"2023-05-28T04:10:06.112Z","comments":true,"path":"2022/05/10/MC基础教程2/","permalink":"https://icylightdream.github.io/2022/05/10/MC%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B2/","excerpt":"","text":"MC基础教程系列第二期出了 和上一期隔了两年… 加载器下载Forge老牌加载器，新版本( 1.13+ )不太好用官网: https://files.minecraftforge.net/net/minecraftforge/forge 左侧选版本，右侧选Installer不看广告下载可以看我很久以前写的方法 Optifine链接:https://optifine.net/downloads中文:高清修复 英文缩写:OF也是很老的加载器，可以用来加载光影。顺便说一下，Optifine和Fabric不兼容，建议把Optifine换成Iris和Sodium，也可以安装光影，效果也很好。可以看看籽岷的Sodium介绍视频。 LiteLoader官网:http://www.liteloader.com/download最高支持1.12.2，比如1.7.10的VoxelMap需要用LiteLoader Fabric支持1.14+, 轻量级新加载器，下载https://fabricmc.net/use/installer不少Fabric mod需要Fabric API 还不如把Fabric API整合到Fabric Loader里Fabric和Optifine不兼容！替代方法在加载器-&gt;下载-&gt;Optifine的最后。 安装这里以Forge举例，基本差不多先要安装原版，再装Forge别忘了更改.minecraft目录最后点击确定就开始安装了。 启动器最简单的方法，这里以PCL2为例。到下载这里选版本，选完版本选要安装的加载器，点开始安装就好了。 模组下载curseforgehttps://www.curseforge.com/minecraft/mc-mods在这里搜索mod名称，比如Fabric API进去之后点Files找到对应的mc版本，右边下载。等待五秒后就能下载了。 MC百科链接第二个就是，点进去会显示需要的加载器、链接和支持的版本，有的模组还支持下载，这里建议去链接里下载。Fabric API有CurseForge链接，点进去用上面的教程就行。 mcbbs链接搜索需要登陆，不过可以借助万能的百度搜索。应该能注意到，上面mcmod相关链接里也有mcbbs的链接。不过mcbbs的Fabric已经很久没有更新了，不知道什么时候会回来更新。记得看眼适用版本和Modloader需求。如果遇到这种的需要自己找链接。 安装找到.minecraft文件夹，没开启版本隔离在mods文件夹，开启版本隔离在versions\\&lt;版本名&gt;\\mods文件夹，把模组文件放进去就行了 光影下载curseforge链接:https://www.curseforge.com/minecraft/customization找到想下的光影，到Files选择MC版本后下载。 mcbbs和上面一样，在mcbbs里搜索就行。到下载地址下载。 安装找到.minecraft文件夹，没开启版本隔离放在shaderpacks文件夹，开启了放在versions\\&lt;版本名&gt;\\shaderpacks里，打开mc,在选项-&gt;视频设置-&gt;光影里开启光影。$\\color{white}{这里因为电脑配置不行就不放图了}$ 材质包下载下载方法还是上面的那几个，就不写了。 安装找到.minecraft文件夹，没开启版本隔离放在resourcepacks文件夹里，开启了放在versions\\&lt;版本名&gt;\\resourcepacks文件夹里，打开mc，在选项-&gt;资源包里安装。 数据包下载比上面还多一个:Planet Minecraft链接:https://www.planetminecraft.com/data-packs是一个国外的论坛，相当于国外的mcbbs。有些数据包还需要安装材质包，材质包安装方法在上面。点Download就能下载了。 安装找到.minecraft文件夹，没开启版本隔离放在saves\\&lt;世界名&gt;\\datapacks，开启版本隔离放在versions\\&lt;版本名&gt;\\saves\\&lt;世界名&gt;\\datapacks。如果存档是开着的可以输入/reload重新加载数据包。","categories":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]},{"title":"手工制作使用WinXShell的PE(不是直接生成)","slug":"手工制作使用WinXShell的PE-1","date":"2022-03-11T14:43:57.000Z","updated":"2024-08-26T09:03:09.616Z","comments":true,"path":"2022/03/11/手工制作使用WinXShell的PE-1/","permalink":"https://icylightdream.github.io/2022/03/11/%E6%89%8B%E5%B7%A5%E5%88%B6%E4%BD%9C%E4%BD%BF%E7%94%A8WinXShell%E7%9A%84PE-1/","excerpt":"","text":"前言众所周知，PE有很多，比如：WePE、优启通、EdgelessPE、FirPE等。当然，这些都是别人做好的。能不能自己做一个？所以就有了这个 提示：因为用的是WinXShell而不是Explorer，最终效果可能不太好看一. 准备1.系统镜像可以从微软、msdn我告诉你和msdn的新版下载。这里使用Windows10 21H2。 2.PECMD原作者提供的官网好像没法用了 官方网址：http://mdyblog.blog.163.com/blog/static/106150119201202591855298/NonCopyRight，任何个人和组织(含商业组织)可随意免费使用，随意修改，…。技术支持可咨询作者—— PECMD帮助第一页 可以在PE里提取出来。 如果找到官网可以在评论里说一下 3.WinXShell也是没找到，只能提取了文件应该是这样 4.WimTool用Dism++也可以，生成wim文件用的 Lxl1638 BBS.WUYOU.COM 茂名二中 老九，2010.07.16——WimTool帮助界面 也找不到官网 5.UltraISO不是免费的。可以从各种各样的地方提取出绿色版&#x2F;单文件版。 二、解开镜像1.双击打开系统镜像这里镜像在F盘，后面F盘都是这个位置 2.解开用管理员身份打开WimTool “选择要挂载或解开的WIM文件”填F:\\sources\\boot.wim“选择挂载或解开的目标文件夹”填解开的文件夹，需要是空的，后面将这个文件夹称之为&lt;PE文件目录&gt;其他不用管点击解开镜像等待解开 3.提权解开后，只有TrustedInstaller有权限使用工具在右键菜单增加取得所有权，这里用EcMenu。 4.删除不必要文件删除&lt;PE文件目录&gt;\\sources文件夹 三、添加文件1.复制F:\\sources\\install.wim\\1\\Windows\\Web到&lt;PE文件目录&gt;\\Windows\\Web(壁纸) 2.复制WinXShell(WinXShell文件夹)到&lt;PE文件目录&gt;\\Program Files记得顺便把&lt;PE文件目录&gt;\\Windows\\Web\\Wallpaper\\Windows\\img0.jpg到&lt;PE文件目录&gt;\\Program Files\\WinXShell\\wallpaper.jpg 3.PECMD和PECMD.INI复制PECMD.EXE到&lt;PE文件目录&gt;\\Windows\\System32\\在&lt;PE文件目录&gt;\\Windows新建文件PECMD.INI并打开，输入 1234567891011121314151617//初始化WinPE, 会生成desktop.ini, 需要放在前面INIT U//显示隐藏分区SHOW -check -1:-1//回收站大小设为0RECY *:\\,0//关闭小键盘（防止不带数字键的笔记本键盘输入错误）NUMK 0//删除 Desktop.iniFILE X:\\Windows\\System32\\config\\systemprofile\\Desktop\\desktop.iniFILE X:\\Users\\Default\\Desktop\\desktop.iniFILE X:\\Users\\Public\\Desktop\\desktop.iniFILE X:\\Users\\Administrator\\Desktop\\desktop.ini//加载壁纸WALL X:\\Windows\\Web\\Wallpaper\\Windows\\img0.jpg//将Shell设置为WinXShellSHEL X:\\Program Files\\WinXShell\\WinXShell.exe 可以不带参数打开PECMD.EXE来查看其他命令和用法。 四、更改注册表打开regedit 1.在HKLM加载&lt;PE文件目录&gt;\\Windows\\System32\\config\\SYSTEM为SYS在HKLM\\SYS\\Setup下面找到CmdLine更改为PECMD.EXE MAIN X:\\Windows\\PECMD.INI解释一下：CmdLine是开机自动启动的任务，把原来的 安装Windows 改成打开PECMD执行PECMD.INI里的内容可以上载了 2.在HKLM加载&lt;PE文件目录&gt;\\Windows\\System32\\config\\SOFTWARE为SOFT找到HKLM\\SOFT\\Microsoft\\Windows\\CurrentVersion\\Policies\\System将EnableCursorSuppression更改为0然后上载。 3.在HKLM加载&lt;PE文件目录&gt;\\Windows\\System32\\config\\DEFAULT为DEF找到HKLM\\DEF\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced新建32位DWORD值: 1234//显示隐藏文件Hidden 设置为1//显示文件扩展名HideFileExt 设置为0 然后上载。 五、打包到这里PE就做好了。可以打包了。用管理员身份打开WimTool-&gt;新制和追加源目录填&lt;PE文件目录&gt;保存到boot.wim点击新建映像 制作好wim后用 UltraISO 打开原来的系统镜像删除support、sources\\*.*、autorun.inf和setup.exe在sources下面把生成的boot.wim添加进去点击另存为，不要点保存 六、测试这里使用VMware Workstation Pro测试。咕咕咕","categories":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"手工制作使用WinXShell的PE","slug":"科技/手工制作使用WinXShell的PE","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/%E6%89%8B%E5%B7%A5%E5%88%B6%E4%BD%9C%E4%BD%BF%E7%94%A8WinXShell%E7%9A%84PE/"}],"tags":[{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"}]},{"title":"MC基础教程#1-关于启动器","slug":"MC基础教程1","date":"2020-04-15T13:03:26.000Z","updated":"2023-05-28T04:09:15.387Z","comments":true,"path":"2020/04/15/MC基础教程1/","permalink":"https://icylightdream.github.io/2020/04/15/MC%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B1/","excerpt":"","text":"警告: 本文写于 2020 年，内容可能过时，可能以后有时间会重新写 下载Minecraft正版手机版应用市场&#x2F;App Store等 搜索我的世界，下载我的世界中国版(基岩版,BE) 即可。 电脑版除网易版需下载Java8(1.17-)和Java17+(1.17+) 一、下载我的世界中国版( 网易版 )链接:http://mc.163.com/index.html选择 立即下载端游 下载安装程序。剩下的步骤按着上面说的就行了。然后，到https://mail.163.com/register/index.htm注册网易邮箱，好像还得弄个防沉迷(登录的时候会提示)，然后打开启动器:有的时候会更新，点击立即更新即可。更新之后或没有更新，应该能看到这样的界面:输入邮箱&amp;密码登录。 二、下载我的世界国际版(PC版)首先，得有一个微软账号。链接(安装Windows时一般会强制注册)然后购买，下载Minecraft国际版的安装程序，开始安装。Win10&#x2F;11自带的Microsoft Store里也可以下载。最后，启动Minecraft如果是这样的话，说明Minecraft正在更新，等待一会。 三、购买Minecraft基岩版(PE)电脑版(Win10)打开Microsoft Store( Win10&#x2F;11自带 )，找到Minecraft for Windows，购买。 Minecraft第三方启动器1.HMCL(Hello Minecraft Luncher)下载:https://hmcl.huangyuhui.net或Github使用方法:选择下载Windows版本.exe文件或.jar文件。.exe文件直接运行，.jar文件用命令行:java -jar &lt;HMCL名称&gt;.jar打开后:如果买了正版号，登录方式改为正版&#x2F;微软登录，填写邮箱及密码即可。如果选择离线，那么只能玩单人世界，不能玩多人世界(除非那些不需要正版验证的服务器)。特色: 六年历史多系统支持全新界面自动安装Fabic、Forge、Liteloader、Optifine个性化主题生成启动脚本: 2.MultiMC下载地址:https://multimc.org/#Download下载完是一个zip文件，全部解压即可。然后打开MultiMC.exe。第一次运行Language找到最下面选择简体中文即可。然后选择javaw路径。需要到设置--&gt;账号--&gt;添加添加账户。然后添加一个版本后点击版本就可以玩了。 Manage multiple instances of Minecraft at once Start Minecraft with a custom resolution Change Java’s runtime options (including memory options) Shows Minecraft’s console output in a colour coded window Kill Minecraft easily if it crashes &#x2F; freezes Custom icons and groups for instances Forge integration (automatic installation, version downloads, mod management) Minecraft world management Import and export Minecraft instances to share them with anyone Supports every version of Minecraft that the vanilla launcher does (我把官网的简介拷贝下来了) 机翻: 一次管理多个 Minecraft 实例 使用自定义分辨率启动 Minecraft 更改 Java 的运行时选项 (包括内存选项) 在彩色编码窗口中显示 Minecraft 的控制台输出 如果 Minecraft 崩溃或未响应, 很容易关闭它 实例的自定义图标和组 Forge 集成 (自动安装、版本下载、模组管理) 世界管理 导入和导出 Minecraft 实例以与任何人共享 支持别的启动器能做的每个版本的 Minecraft 3.PCL2https://afdian.net/@LTCat运行","categories":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]},{"title":"MC1.12.2开服教程（使用CatServer）","slug":"mc-catserver","date":"2020-04-05T10:59:56.000Z","updated":"2024-08-26T09:07:18.275Z","comments":true,"path":"2020/04/05/mc-catserver/","permalink":"https://icylightdream.github.io/2020/04/05/mc-catserver/","excerpt":"","text":"注意：电脑需要安装Java8,可以到java.com下载。 一、下载最新版CatServer下载的应该是CatServer-xxxxxxx-universsal.jar 二、打开下载文件夹或是这样的:如果是这样的话，把显示扩展名打开，直接百度一下就行了新建一个文本文档,把扩展名改成bat (批处理文件)右键–&gt;编辑输入java -Xmx&lt;最大内存&gt; -Xms&lt;最小内存&gt; -jar &lt;CatServer名字&gt;.jar如果最大内存为6000M，最小内存为2048M，CatServer名字是CatServer那么，应该这么写： 1java -Xmx6000M -Xms2048M -jar CatServer.jar 然后保存 三、双击运行这个批处理文件第一次运行，它会下载很多东西等一会儿吧 下载完，这个文件夹里多了很多东西: 四、这些东西是干啥的mods:mod文件夹，mod放这里 plugins:插件文件夹，插件放这里 world:世界，可以复制本地的(必须是1.12.2的世界) minecraft_server.1.12.2.jar:1.12.2Forge服务器 CatServer.jar:不用说 Start.bat:只不过把第五步做的批处理改了个名字而已 server.properties:先用记事本打开然后说一下这些东西是干啥的:参考Minecraft Wiki 123456789101112131415161718192021222324252627282930313233343536373839allow-nether=true #是否开启地狱level-name=world #默认世界名称（最好不要改）server-port=25566 #服务器端口（xxx.x.xxx:25565中的冒号后面是这个server-port的数值）,不用改level-seed= #地图种子（没有特殊需要就不填）server-ip= #服务器指向IP（默认不要改放空）max-build-height=256 #服务器最大建筑高度，最大256spawn-npcs=true #是否有主城NPCwhite-list=false #是否开启白名单（开启后在白名单内的玩家才能进入服务器，否则进入不了。不要随便开）spawn-animals=true #主城是否有动物hardcore=false #我的世界极限模式是否开启（玩过的都知道）online-mode=true #是否开启正版验证，需用我的世界官方启动器才能进入resource-pack= #服务器资源包：填下载地址（不需要就不填）pvp=true #是否开启服务器PVPdifficulty=1 #服务器难度： 0和平 1简单 2中等 3困难enable-command-block=false #是否开启命令方块gamemode=0 #玩家默认进入游戏的游戏模式 1创造 0生存 2冒险模式3旁观者max-players=20 #服务器最大玩家数（超过后玩家无法进入,-1是无限）spawn-monsters=true #主城是否刷新怪物spawn-protection=16 #服务器最大保护区（玩家破坏建筑不了）motd=A Minecraft Server #MOTD指的是在玩家添加服务器后下面会显示这里面的内容（不能为中文、特殊符号） 好了，就差最后一件事了打开cmd，输入ipconfig找到有IPv4地址的地方: 1234567891011无线局域网适配器 xxxxxxx: 媒体状态 . . . . . . . . . . . . : 媒体已断开连接 连接特定的 DNS 后缀 . . . . . . . :无线局域网适配器 WLAN: 连接特定的 DNS 后缀 . . . . . . . : 本地链接 IPv6 地址. . . . . . . . : 被和谐了 IPv4 地址 . . . . . . . . . . . . : 192.168.3.148 # 记住这个 子网掩码 . . . . . . . . . . . . : 被和谐了 默认网关. . . . . . . . . . . . . : 被和谐了 五、可以开服了再次双击运行这个批处理文件，等着服务器开启服务器开完了，打开MC试试点击添加服务器，IP填刚才记住的ip(其实还可以填127.0.0.1或loaclhost)，后面跟着一个英文的冒号:，然后填server.properties中的server-port，如果这个值是25565，那么直接填ip就行了(因为缺省的就是这个端口)点击完成，你会发现….但是啥都不能做，怎么办呢？(其实还能做一些事)在服务器后台输入:op &lt;你的名字&gt;就能变成管理员了 六、关闭服务器注意！！！关闭服务器不能直接$\\times$掉，需要在后台，输入stop，因为直接×掉，地图不会自动保存！ 七、注意电脑配置不要太低，不然服务端会卡掉如果把正版验证关了，小心别人用你的名字搞事情解决方案:安装AuthMe插件 八、让别人也可以连接到你的服务器这里需要一个网络映射软件, 网上有很多, 上网搜一下就行了,让别人连映射的网站就行了(别让别人连127.0.0.1或loaclhost). 好了，要说的就这些了，知道这些应该可以开服了吧……感谢名单:CatServer作者MCBBS CatServer介绍","categories":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]}],"categories":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/categories/cpp/"},{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"科技/Linux","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/Linux/"},{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/categories/Minecraft/"},{"name":"手工制作使用WinXShell的PE","slug":"科技/手工制作使用WinXShell的PE","permalink":"https://icylightdream.github.io/categories/%E7%A7%91%E6%8A%80/%E6%89%8B%E5%B7%A5%E5%88%B6%E4%BD%9C%E4%BD%BF%E7%94%A8WinXShell%E7%9A%84PE/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://icylightdream.github.io/tags/cpp/"},{"name":"科技","slug":"科技","permalink":"https://icylightdream.github.io/tags/%E7%A7%91%E6%8A%80/"},{"name":"Linux","slug":"Linux","permalink":"https://icylightdream.github.io/tags/Linux/"},{"name":"Minecraft","slug":"Minecraft","permalink":"https://icylightdream.github.io/tags/Minecraft/"}]}